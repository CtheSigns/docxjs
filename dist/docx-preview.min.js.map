{"version":3,"file":"docx-preview.min.js","mappings":"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","sources":["webpack://docx/webpack/universalModuleDefinition","webpack://docx/./src/mathml.scss","webpack://docx/./node_modules/css-loader/dist/runtime/api.js","webpack://docx/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://docx/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://docx/./src/common/open-xml-package.ts","webpack://docx/./src/common/part.ts","webpack://docx/./src/common/relationship.ts","webpack://docx/./src/document-parser.ts","webpack://docx/./src/document-props/core-props-part.ts","webpack://docx/./src/document-props/core-props.ts","webpack://docx/./src/document-props/custom-props-part.ts","webpack://docx/./src/document-props/custom-props.ts","webpack://docx/./src/document-props/extended-props-part.ts","webpack://docx/./src/document-props/extended-props.ts","webpack://docx/./src/document/bookmarks.ts","webpack://docx/./src/document/border.ts","webpack://docx/./src/document/checkbox.ts","webpack://docx/./src/document/common.ts","webpack://docx/./src/document/document-part.ts","webpack://docx/./src/document/dom.ts","webpack://docx/./src/document/line-spacing.ts","webpack://docx/./src/document/paragraph.ts","webpack://docx/./src/document/run.ts","webpack://docx/./src/document/section.ts","webpack://docx/./src/docx-preview.ts","webpack://docx/./src/font-table/font-table.ts","webpack://docx/./src/font-table/fonts.ts","webpack://docx/./src/header-footer/elements.ts","webpack://docx/./src/header-footer/parts.ts","webpack://docx/./src/html-renderer.ts","webpack://docx/./src/javascript.ts","webpack://docx/./src/notes/elements.ts","webpack://docx/./src/notes/parts.ts","webpack://docx/./src/numbering/numbering-part.ts","webpack://docx/./src/numbering/numbering.ts","webpack://docx/./src/parser/xml-parser.ts","webpack://docx/./src/settings/settings-part.ts","webpack://docx/./src/settings/settings.ts","webpack://docx/./src/styles/styles-part.ts","webpack://docx/./src/theme/theme-part.ts","webpack://docx/./src/theme/theme.ts","webpack://docx/./src/utils.ts","webpack://docx/./src/vml/vml.ts","webpack://docx/./src/word-document.ts","webpack://docx/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://docx/webpack/bootstrap","webpack://docx/webpack/runtime/compat get default export","webpack://docx/webpack/runtime/define property getters","webpack://docx/webpack/runtime/hasOwnProperty shorthand","webpack://docx/webpack/runtime/make namespace object","webpack://docx/webpack/runtime/jsonp chunk loading","webpack://docx/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jszip\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jszip\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"docx\"] = factory(require(\"jszip\"));\n\telse\n\t\troot[\"docx\"] = factory(root[\"JSZip\"]);\n})(globalThis, (__WEBPACK_EXTERNAL_MODULE__626__) => {\nreturn ","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 100%27 preserveAspectRatio=%27none%27%3E%3Cpath d=%27m0,75 l5,0 l5,25 l10,-100%27 stroke=%27black%27 fill=%27none%27 vector-effect=%27non-scaling-stroke%27/%3E%3C/svg%3E\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@namespace \\\"http://www.w3.org/1998/Math/MathML\\\";math{display:inline-block;line-height:initial}mfrac{display:inline-block;vertical-align:-50%;text-align:center}mfrac>:first-child{border-bottom:solid thin currentColor}mfrac>*{display:block}msub>:nth-child(2){font-size:smaller;vertical-align:sub}msup>:nth-child(2){font-size:smaller;vertical-align:super}munder,mover,munderover{display:inline-flex;flex-flow:column nowrap;vertical-align:middle;text-align:center}munder>:not(:first-child),mover>:not(:first-child),munderover>:not(:first-child){font-size:smaller}munderover>:last-child{order:-1}mroot,msqrt{position:relative;display:inline-block;border-top:solid thin currentColor;margin-top:.5px;vertical-align:middle;margin-left:1ch}mroot:before,msqrt:before{content:\\\"\\\";display:inline-block;position:absolute;width:1ch;left:-1ch;top:-1px;bottom:0;background-image:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \")}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/mathml.scss\"],\"names\":[],\"mappings\":\"AAAA,+CAAA,CAEA,KACI,oBAAA,CACA,mBAAA,CAGJ,MACI,oBAAA,CACA,mBAAA,CACA,iBAAA,CAEA,mBACI,qCAAA,CAGJ,QACI,aAAA,CAKJ,mBACI,iBAAA,CACA,kBAAA,CAKJ,mBACI,iBAAA,CACA,oBAAA,CAIR,wBACI,mBAAA,CACA,uBAAA,CACA,qBAAA,CACA,iBAAA,CAEA,iFACI,iBAAA,CAKJ,uBAAA,QAAA,CAGJ,YACI,iBAAA,CACA,oBAAA,CACA,kCAAA,CACA,eAAA,CACA,qBAAA,CACA,eAAA,CAEA,0BACI,UAAA,CACA,oBAAA,CACA,iBAAA,CACA,SAAA,CACA,SAAA,CACA,QAAA,CACA,QAAA,CACA,wDAAA\",\"sourcesContent\":[\"@namespace \\\"http://www.w3.org/1998/Math/MathML\\\";\\n\\nmath {\\n    display: inline-block;\\n    line-height: initial;\\n}\\n\\nmfrac {\\n    display: inline-block;\\n    vertical-align: -50%;\\n    text-align: center;\\n\\n    &>:first-child {\\n        border-bottom: solid thin currentColor;\\n    }\\n\\n    &>* {\\n        display: block;\\n    }\\n}\\n\\nmsub {\\n    &>:nth-child(2) {\\n        font-size: smaller;\\n        vertical-align: sub;\\n    }\\n}\\n\\nmsup {\\n    &>:nth-child(2) {\\n        font-size: smaller;\\n        vertical-align: super;\\n    }\\n}\\n\\nmunder, mover, munderover {\\n    display: inline-flex;\\n    flex-flow: column nowrap;\\n    vertical-align: middle;\\n    text-align: center;\\n\\n    &>:not(:first-child) {\\n        font-size: smaller;\\n    }\\n}\\n\\nmunderover {\\n    &>:last-child { order: -1; }\\n}\\n\\nmroot, msqrt {\\n    position: relative;\\n    display: inline-block;\\n    border-top: solid thin currentColor;  \\n    margin-top: 0.5px;\\n    vertical-align: middle;  \\n    margin-left: 1ch; \\n\\n    &:before {\\n        content: \\\"\\\";\\n        display: inline-block;\\n        position: absolute;\\n        width: 1ch;\\n        left: -1ch;\\n        top: -1px;\\n        bottom: 0;\\n        background-image: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 100' preserveAspectRatio='none'%3E%3Cpath d='m0,75 l5,0 l5,25 l10,-100' stroke='black' fill='none' vector-effect='non-scaling-stroke'/%3E%3C/svg%3E\\\");\\n    }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___.toString();\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","import * as JSZip from \"jszip\";\nimport { parseXmlString, XmlParser } from \"../parser/xml-parser\";\nimport { splitPath } from \"../utils\";\nimport { parseRelationships, Relationship } from \"./relationship\";\n\nexport interface OpenXmlPackageOptions {\n    trimXmlDeclaration: boolean,\n    keepOrigin: boolean,\n}\n\nexport class OpenXmlPackage {\n    xmlParser: XmlParser = new XmlParser();\n\n    constructor(private _zip: JSZip, public options: OpenXmlPackageOptions) {\n    }\n\n    get(path: string): any {\n        return this._zip.files[normalizePath(path)];\n    }\n\n    update(path: string, content: any) {\n        this._zip.file(path, content);\n    }\n\n    static async load(input: Blob | any, options: OpenXmlPackageOptions): Promise<OpenXmlPackage> {\n        const zip = await JSZip.loadAsync(input);\n\t\treturn new OpenXmlPackage(zip, options);\n    }\n\n    save(type: any = \"blob\"): Promise<any>  {\n        return this._zip.generateAsync({ type });\n    }\n\n    load(path: string, type: JSZip.OutputType = \"string\"): Promise<any> {\n        return this.get(path)?.async(type) ?? Promise.resolve(null);\n    }\n\n    async loadRelationships(path: string = null): Promise<Relationship[]> {\n        let relsPath = `_rels/.rels`;\n\n        if (path != null) {\n            const [f, fn] = splitPath(path);\n            relsPath = `${f}_rels/${fn}.rels`;\n        }\n\n        const txt = await this.load(relsPath);\n\t\treturn txt ? parseRelationships(this.parseXmlDocument(txt).firstElementChild, this.xmlParser) : null;\n    }\n\n    /** @internal */\n    parseXmlDocument(txt: string): Document {\n        return parseXmlString(txt, this.options.trimXmlDeclaration);\n    }\n}\n\nfunction normalizePath(path: string) {\n    return path.startsWith('/') ? path.substr(1) : path;\n}","import { serializeXmlString } from \"../parser/xml-parser\";\nimport { OpenXmlPackage } from \"./open-xml-package\";\nimport { Relationship } from \"./relationship\";\n\nexport class Part {\n    protected _xmlDocument: Document;\n\n    rels: Relationship[];\n\n    constructor(protected _package: OpenXmlPackage, public path: string) {\n    }\n\n    async load(): Promise<any> {\n\t\tthis.rels = await this._package.loadRelationships(this.path);\n\n\t\tconst xmlText = await this._package.load(this.path);\n\t\tconst xmlDoc = this._package.parseXmlDocument(xmlText);\n\n\t\tif (this._package.options.keepOrigin) {\n\t\t\tthis._xmlDocument = xmlDoc;\n\t\t}\n\n\t\tthis.parseXml(xmlDoc.firstElementChild);\n    }\n\n    save() {\n        this._package.update(this.path, serializeXmlString(this._xmlDocument));\n    }\n\n    protected parseXml(root: Element) {\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport interface Relationship {\n    id: string,\n    type: RelationshipTypes | string,\n    target: string\n    targetMode: \"\" | \"External\" | string \n}\n\nexport enum RelationshipTypes {\n    OfficeDocument = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n    FontTable = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable\",\n    Image = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\n    Numbering = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering\",\n    Styles = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\n    StylesWithEffects = \"http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects\",\n    Theme = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\n    Settings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings\",\n    WebSettings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings\",\n    Hyperlink = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\n    Footnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes\",\n\tEndnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes\",\n    Footer = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer\",\n    Header = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/header\",\n    ExtendedProperties = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\",\n    CoreProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\n\tCustomProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/custom-properties\",\n}\n\nexport function parseRelationships(root: Element, xml: XmlParser): Relationship[] {\n    return xml.elements(root).map(e => <Relationship>{\n        id: xml.attr(e, \"Id\"),\n        type: xml.attr(e, \"Type\"),\n        target: xml.attr(e, \"Target\"),\n        targetMode: xml.attr(e, \"TargetMode\")\n    });\n}","import {\n\tDomType, WmlTable, IDomNumbering,\n\tWmlHyperlink, IDomImage, OpenXmlElement, WmlTableColumn, WmlTableCell,\n\tWmlTableRow, NumberingPicBullet, WmlText, WmlSymbol, WmlBreak, WmlNoteReference\n} from './document/dom';\nimport { DocumentElement } from './document/document';\nimport { WmlParagraph, parseParagraphProperties, parseParagraphProperty } from './document/paragraph';\nimport { parseSectionProperties, SectionProperties } from './document/section';\nimport xml from './parser/xml-parser';\nimport { parseRunProperties, WmlRun } from './document/run';\nimport { parseBookmarkEnd, parseBookmarkStart } from './document/bookmarks';\nimport { IDomStyle, IDomSubStyle } from './document/style';\nimport { WmlFieldChar, WmlFieldSimple, WmlInstructionText } from './document/fields';\nimport { convertLength, LengthUsage, LengthUsageType } from './document/common';\nimport { parseVmlElement } from './vml/vml';\nimport { WmlCheckboxFormField, parseCheckbox } from './document/checkbox';\n\nexport var autos = {\n\tshd: \"inherit\",\n\tcolor: \"black\",\n\tborderColor: \"black\",\n\thighlight: \"transparent\"\n};\n\nconst supportedNamespaceURIs = [];\n\nconst mmlTagMap = {\n\t\"oMath\": DomType.MmlMath,\n\t\"oMathPara\": DomType.MmlMathParagraph,\n\t\"f\": DomType.MmlFraction,\n\t\"num\": DomType.MmlNumerator,\n\t\"den\": DomType.MmlDenominator,\n\t\"rad\": DomType.MmlRadical,\n\t\"deg\": DomType.MmlDegree,\n\t\"e\": DomType.MmlBase,\n\t\"sSup\": DomType.MmlSuperscript,\n\t\"sSub\": DomType.MmlSubscript,\n\t\"sup\": DomType.MmlSuperArgument,\n\t\"sub\": DomType.MmlSubArgument,\n\t\"d\": DomType.MmlDelimiter,\n\t\"nary\": DomType.MmlNary,\n}\n\nexport interface DocumentParserOptions {\n\tignoreWidth: boolean;\n\tdebug: boolean;\n}\n\nexport class DocumentParser {\n\toptions: DocumentParserOptions;\n\n\tconstructor(options?: Partial<DocumentParserOptions>) {\n\t\tthis.options = {\n\t\t\tignoreWidth: false,\n\t\t\tdebug: false,\n\t\t\t...options\n\t\t};\n\t}\n\n\tparseNotes(xmlDoc: Element, elemName: string, elemClass: any): any[] {\n\t\tvar result = [];\n\n\t\tfor (let el of xml.elements(xmlDoc, elemName)) {\n\t\t\tconst node = new elemClass();\n\t\t\tnode.id = xml.attr(el, \"id\");\n\t\t\tnode.noteType = xml.attr(el, \"type\");\n\t\t\tnode.children = this.parseBodyElements(el);\n\t\t\tresult.push(node);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseDocumentFile(xmlDoc: Element): DocumentElement {\n\t\tvar xbody = xml.element(xmlDoc, \"body\");\n\t\tvar background = xml.element(xmlDoc, \"background\");\n\t\tvar sectPr = xml.element(xbody, \"sectPr\");\n\n\t\treturn {\n\t\t\ttype: DomType.Document,\n\t\t\tchildren: this.parseBodyElements(xbody),\n\t\t\tprops: sectPr ? parseSectionProperties(sectPr, xml) : {} as SectionProperties,\n\t\t\tcssStyle: background ? this.parseBackground(background) : {},\n\t\t};\n\t}\n\n\tparseBackground(elem: Element): any {\n\t\tvar result = {};\n\t\tvar color = xmlUtil.colorAttr(elem, \"color\");\n\n\t\tif (color) {\n\t\t\tresult[\"background-color\"] = color;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseBodyElements(element: Element): OpenXmlElement[] {\n\t\tvar children = [];\n\n\t\tfor (let elem of xml.elements(element)) {\n\t\t\tswitch (elem.localName) {\n\t\t\t\tcase \"p\":\n\t\t\t\t\tchildren.push(this.parseParagraph(elem));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tbl\":\n\t\t\t\t\tchildren.push(this.parseTable(elem));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"sdt\":\n\t\t\t\t\tchildren.push(...this.parseSdt(elem, e => this.parseBodyElements(e)));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn children;\n\t}\n\n\tparseStylesFile(xstyles: Element): IDomStyle[] {\n\t\tvar result = [];\n\n\t\txmlUtil.foreach(xstyles, n => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"style\":\n\t\t\t\t\tresult.push(this.parseStyle(n));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"docDefaults\":\n\t\t\t\t\tresult.push(this.parseDefaultStyles(n));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseDefaultStyles(node: Element): IDomStyle {\n\t\tvar result = <IDomStyle>{\n\t\t\tid: null,\n\t\t\tname: null,\n\t\t\ttarget: null,\n\t\t\tbasedOn: null,\n\t\t\tstyles: []\n\t\t};\n\n\t\txmlUtil.foreach(node, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"rPrDefault\":\n\t\t\t\t\tvar rPr = xml.element(c, \"rPr\");\n\n\t\t\t\t\tif (rPr)\n\t\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\t\ttarget: \"span\",\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(rPr, {})\n\t\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pPrDefault\":\n\t\t\t\t\tvar pPr = xml.element(c, \"pPr\");\n\n\t\t\t\t\tif (pPr)\n\t\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\t\ttarget: \"p\",\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(pPr, {})\n\t\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseStyle(node: Element): IDomStyle {\n\t\tvar result = <IDomStyle>{\n\t\t\tid: xml.attr(node, \"styleId\"),\n\t\t\tisDefault: xml.boolAttr(node, \"default\"),\n\t\t\tname: null,\n\t\t\ttarget: null,\n\t\t\tbasedOn: null,\n\t\t\tstyles: [],\n\t\t\tlinked: null\n\t\t};\n\n\t\tswitch (xml.attr(node, \"type\")) {\n\t\t\tcase \"paragraph\": result.target = \"p\"; break;\n\t\t\tcase \"table\": result.target = \"table\"; break;\n\t\t\tcase \"character\": result.target = \"span\"; break;\n\t\t\t//case \"numbering\": result.target = \"p\"; break;\n\t\t}\n\n\t\txmlUtil.foreach(node, n => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"basedOn\":\n\t\t\t\t\tresult.basedOn = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"name\":\n\t\t\t\t\tresult.name = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"link\":\n\t\t\t\t\tresult.linked = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"next\":\n\t\t\t\t\tresult.next = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"aliases\":\n\t\t\t\t\tresult.aliases = xml.attr(n, \"val\").split(\",\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pPr\":\n\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\ttarget: \"p\",\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\n\t\t\t\t\t});\n\t\t\t\t\tresult.paragraphProps = parseParagraphProperties(n, xml);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rPr\":\n\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\ttarget: \"span\",\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\n\t\t\t\t\t});\n\t\t\t\t\tresult.runProps = parseRunProperties(n, xml);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblPr\":\n\t\t\t\tcase \"tcPr\":\n\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\ttarget: \"td\", //TODO: maybe move to processor\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblStylePr\":\n\t\t\t\t\tfor (let s of this.parseTableStyle(n))\n\t\t\t\t\t\tresult.styles.push(s);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rsid\":\n\t\t\t\tcase \"qFormat\":\n\t\t\t\tcase \"hidden\":\n\t\t\t\tcase \"semiHidden\":\n\t\t\t\tcase \"unhideWhenUsed\":\n\t\t\t\tcase \"autoRedefine\":\n\t\t\t\tcase \"uiPriority\":\n\t\t\t\t\t//TODO: ignore\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.options.debug && console.warn(`DOCX: Unknown style element: ${n.localName}`);\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableStyle(node: Element): IDomSubStyle[] {\n\t\tvar result = [];\n\n\t\tvar type = xml.attr(node, \"type\");\n\t\tvar selector = \"\";\n\t\tvar modificator = \"\";\n\n\t\tswitch (type) {\n\t\t\tcase \"firstRow\":\n\t\t\t\tmodificator = \".first-row\";\n\t\t\t\tselector = \"tr.first-row td\";\n\t\t\t\tbreak;\n\t\t\tcase \"lastRow\":\n\t\t\t\tmodificator = \".last-row\";\n\t\t\t\tselector = \"tr.last-row td\";\n\t\t\t\tbreak;\n\t\t\tcase \"firstCol\":\n\t\t\t\tmodificator = \".first-col\";\n\t\t\t\tselector = \"td.first-col\";\n\t\t\t\tbreak;\n\t\t\tcase \"lastCol\":\n\t\t\t\tmodificator = \".last-col\";\n\t\t\t\tselector = \"td.last-col\";\n\t\t\t\tbreak;\n\t\t\tcase \"band1Vert\":\n\t\t\t\tmodificator = \":not(.no-vband)\";\n\t\t\t\tselector = \"td.odd-col\";\n\t\t\t\tbreak;\n\t\t\tcase \"band2Vert\":\n\t\t\t\tmodificator = \":not(.no-vband)\";\n\t\t\t\tselector = \"td.even-col\";\n\t\t\t\tbreak;\n\t\t\tcase \"band1Horz\":\n\t\t\t\tmodificator = \":not(.no-hband)\";\n\t\t\t\tselector = \"tr.odd-row\";\n\t\t\t\tbreak;\n\t\t\tcase \"band2Horz\":\n\t\t\t\tmodificator = \":not(.no-hband)\";\n\t\t\t\tselector = \"tr.even-row\";\n\t\t\t\tbreak;\n\t\t\tdefault: return [];\n\t\t}\n\n\t\txmlUtil.foreach(node, n => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"pPr\":\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttarget: `${selector} p`,\n\t\t\t\t\t\tmod: modificator,\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rPr\":\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttarget: `${selector} span`,\n\t\t\t\t\t\tmod: modificator,\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblPr\":\n\t\t\t\tcase \"tcPr\":\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttarget: selector, //TODO: maybe move to processor\n\t\t\t\t\t\tmod: modificator,\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {})\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseNumberingFile(xnums: Element): IDomNumbering[] {\n\t\tvar result = [];\n\t\tvar mapping = {};\n\t\tvar bullets = [];\n\n\t\txmlUtil.foreach(xnums, n => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"abstractNum\":\n\t\t\t\t\tthis.parseAbstractNumbering(n, bullets)\n\t\t\t\t\t\t.forEach(x => result.push(x));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"numPicBullet\":\n\t\t\t\t\tbullets.push(this.parseNumberingPicBullet(n));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"num\":\n\t\t\t\t\tvar numId = xml.attr(n, \"numId\");\n\t\t\t\t\tvar abstractNumId = xml.elementAttr(n, \"abstractNumId\", \"val\");\n\t\t\t\t\tmapping[abstractNumId] = numId;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tresult.forEach(x => x.id = mapping[x.id]);\n\n\t\treturn result;\n\t}\n\n\tparseNumberingPicBullet(elem: Element): NumberingPicBullet {\n\t\tvar pict = xml.element(elem, \"pict\");\n\t\tvar shape = pict && xml.element(pict, \"shape\");\n\t\tvar imagedata = shape && xml.element(shape, \"imagedata\");\n\n\t\treturn imagedata ? {\n\t\t\tid: xml.intAttr(elem, \"numPicBulletId\"),\n\t\t\tsrc: xml.attr(imagedata, \"id\"),\n\t\t\tstyle: xml.attr(shape, \"style\")\n\t\t} : null;\n\t}\n\n\tparseAbstractNumbering(node: Element, bullets: any[]): IDomNumbering[] {\n\t\tvar result = [];\n\t\tvar id = xml.attr(node, \"abstractNumId\");\n\n\t\txmlUtil.foreach(node, n => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"lvl\":\n\t\t\t\t\tresult.push(this.parseNumberingLevel(id, n, bullets));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseNumberingLevel(id: string, node: Element, bullets: any[]): IDomNumbering {\n\t\tvar result: IDomNumbering = {\n\t\t\tid: id,\n\t\t\tlevel: xml.intAttr(node, \"ilvl\"),\n\t\t\tpStyleName: undefined,\n\t\t\tpStyle: {},\n\t\t\trStyle: {},\n\t\t\tsuff: \"tab\"\n\t\t};\n\n\t\txmlUtil.foreach(node, n => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"pPr\":\n\t\t\t\t\tthis.parseDefaultProperties(n, result.pStyle);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rPr\":\n\t\t\t\t\tthis.parseDefaultProperties(n, result.rStyle);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"lvlPicBulletId\":\n\t\t\t\t\tvar id = xml.intAttr(n, \"val\");\n\t\t\t\t\tresult.bullet = bullets.find(x => x.id == id);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"lvlText\":\n\t\t\t\t\tresult.levelText = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pStyle\":\n\t\t\t\t\tresult.pStyleName = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"numFmt\":\n\t\t\t\t\tresult.format = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"suff\":\n\t\t\t\t\tresult.suff = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseSdt(node: Element, parser: Function): OpenXmlElement[] {\n\t\tconst sdtContent = xml.element(node, \"sdtContent\");\n\t\treturn sdtContent ? parser(sdtContent) : [];\n\t}\n\n\tparseInserted(node: Element, parentParser: Function): OpenXmlElement {\n\t\treturn <OpenXmlElement>{ \n\t\t\ttype: DomType.Inserted, \n\t\t\tchildren: parentParser(node)?.children ?? []\n\t\t};\n\t}\n\n\tparseDeleted(node: Element, parentParser: Function): OpenXmlElement {\n\t\treturn <OpenXmlElement>{ \n\t\t\ttype: DomType.Deleted, \n\t\t\tchildren: parentParser(node)?.children ?? []\n\t\t};\n\t}\n\n\tparseParagraph(node: Element): OpenXmlElement {\n\t\tvar result = <WmlParagraph>{ type: DomType.Paragraph, children: [] };\n\n\t\tfor (let el of xml.elements(node)) {\n\t\t\tswitch (el.localName) {\n\t\t\t\tcase \"pPr\":\n\t\t\t\t\tthis.parseParagraphProperties(el, result);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"r\":\n\t\t\t\t\tresult.children.push(this.parseRun(el, result));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"hyperlink\":\n\t\t\t\t\tresult.children.push(this.parseHyperlink(el, result));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bookmarkStart\":\n\t\t\t\t\t// Skip a bookmark that follows a checkbox as it'd appear as an empty HTML element of no use\n\t\t\t\t\tif (el.previousElementSibling?.getElementsByTagName(\"w:checkBox\").length) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tresult.children.push(parseBookmarkStart(el, xml));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bookmarkEnd\":\n\t\t\t\t\tresult.children.push(parseBookmarkEnd(el, xml));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"oMath\":\n\t\t\t\tcase \"oMathPara\":\n\t\t\t\t\tresult.children.push(this.parseMathElement(el));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"sdt\":\n\t\t\t\t\tresult.children.push(...this.parseSdt(el, e => this.parseParagraph(e).children));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ins\":\n\t\t\t\t\tresult.children.push(this.parseInserted(el, e => this.parseParagraph(e)));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"del\":\n\t\t\t\t\tresult.children.push(this.parseDeleted(el, e => this.parseParagraph(e)));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseParagraphProperties(elem: Element, paragraph: WmlParagraph) {\n\t\tthis.parseDefaultProperties(elem, paragraph.cssStyle = {}, null, c => {\n\t\t\tif (parseParagraphProperty(c, paragraph, xml))\n\t\t\t\treturn true;\n\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"pStyle\":\n\t\t\t\t\tparagraph.styleName = xml.attr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"cnfStyle\":\n\t\t\t\t\tparagraph.className = values.classNameOfCnfStyle(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"framePr\":\n\t\t\t\t\tthis.parseFrame(c, paragraph);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rPr\":\n\t\t\t\t\t//TODO ignore\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tparseFrame(node: Element, paragraph: WmlParagraph) {\n\t\tvar dropCap = xml.attr(node, \"dropCap\");\n\n\t\tif (dropCap == \"drop\")\n\t\t\tparagraph.cssStyle[\"float\"] = \"left\";\n\t}\n\n\tparseHyperlink(node: Element, parent?: OpenXmlElement): WmlHyperlink {\n\t\tvar result: WmlHyperlink = <WmlHyperlink>{ type: DomType.Hyperlink, parent: parent, children: [] };\n\t\tvar anchor = xml.attr(node, \"anchor\");\n\t\tvar relId = xml.attr(node, \"id\");\n\n\t\tif (anchor)\n\t\t\tresult.href = \"#\" + anchor;\n\n\t\tif (relId)\n\t\t\tresult.id = relId;\n\n\t\txmlUtil.foreach(node, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"r\":\n\t\t\t\t\tresult.children.push(this.parseRun(c, result));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseRun(node: Element, parent?: OpenXmlElement): WmlRun | WmlCheckboxFormField {\n\t\tconst checkbox = parseCheckbox(node);\n\t\tif (checkbox) return checkbox;\n\n\t\tvar result: WmlRun = <WmlRun>{ type: DomType.Run, parent: parent, children: [] };\n\n\t\txmlUtil.foreach(node, c => {\n\t\t\tc = this.checkAlternateContent(c);\n\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"t\":\n\t\t\t\t\tresult.children.push(<WmlText>{\n\t\t\t\t\t\ttype: DomType.Text,\n\t\t\t\t\t\ttext: c.textContent\n\t\t\t\t\t});//.replace(\" \", \"\\u00A0\"); // TODO\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"delText\":\n\t\t\t\t\tresult.children.push(<WmlText>{\n\t\t\t\t\t\ttype: DomType.DeletedText,\n\t\t\t\t\t\ttext: c.textContent\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"fldSimple\":\n\t\t\t\t\tresult.children.push(<WmlFieldSimple>{\n\t\t\t\t\t\ttype: DomType.SimpleField,\n\t\t\t\t\t\tinstruction: xml.attr(c, \"instr\"),\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"instrText\":\n\t\t\t\t\tresult.fieldRun = true;\n\t\t\t\t\tresult.children.push(<WmlInstructionText>{\n\t\t\t\t\t\ttype: DomType.Instruction,\n\t\t\t\t\t\ttext: c.textContent\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"fldChar\":\n\t\t\t\t\tresult.fieldRun = true;\n\t\t\t\t\tresult.children.push(<WmlFieldChar>{\n\t\t\t\t\t\ttype: DomType.ComplexField,\n\t\t\t\t\t\tcharType: xml.attr(c, \"fldCharType\"),\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false)\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"noBreakHyphen\":\n\t\t\t\t\tresult.children.push({ type: DomType.NoBreakHyphen });\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"br\":\n\t\t\t\t\tresult.children.push(<WmlBreak>{\n\t\t\t\t\t\ttype: DomType.Break,\n\t\t\t\t\t\tbreak: xml.attr(c, \"type\") || \"textWrapping\"\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"lastRenderedPageBreak\":\n\t\t\t\t\tresult.children.push(<WmlBreak>{\n\t\t\t\t\t\ttype: DomType.Break,\n\t\t\t\t\t\tbreak: \"lastRenderedPageBreak\"\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"sym\":\n\t\t\t\t\tresult.children.push(<WmlSymbol>{\n\t\t\t\t\t\ttype: DomType.Symbol,\n\t\t\t\t\t\tfont: xml.attr(c, \"font\"),\n\t\t\t\t\t\tchar: xml.attr(c, \"char\")\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tab\":\n\t\t\t\t\tresult.children.push({ type: DomType.Tab });\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"footnoteReference\":\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\n\t\t\t\t\t\ttype: DomType.FootnoteReference,\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"endnoteReference\":\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\n\t\t\t\t\t\ttype: DomType.EndnoteReference,\n\t\t\t\t\t\tid: xml.attr(c, \"id\")\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"drawing\":\n\t\t\t\t\tlet d = this.parseDrawing(c);\n\n\t\t\t\t\tif (d)\n\t\t\t\t\t\tresult.children = [d];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pict\":\n\t\t\t\t\tresult.children.push(this.parseVmlPicture(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rPr\":\n\t\t\t\t\tthis.parseRunProperties(c, result);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseMathElement(elem: Element): OpenXmlElement {\n\t\tconst propsTag = `${elem.localName}Pr`;\n\t\tconst result = { type: mmlTagMap[elem.localName], children: [] } as OpenXmlElement;\n\n\t\tfor (const el of xml.elements(elem)) {\n\t\t\tconst childType = mmlTagMap[el.localName];\n\n\t\t\tif (childType) {\n\t\t\t\tresult.children.push(this.parseMathElement(el));\n\t\t\t} else if (el.localName == \"r\") {\n\t\t\t\tvar run = this.parseRun(el);\n\t\t\t\trun.type = DomType.MmlRun;\n\t\t\t\tresult.children.push(run);\n\t\t\t} else if (el.localName == propsTag) {\n\t\t\t\tresult.props = this.parseMathProperies(el);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseMathProperies(elem: Element): Record<string, any> {\n\t\tconst result: Record<string, any> = {};\n\n\t\tfor (const el of xml.elements(elem)) {\n\t\t\tswitch (el.localName) {\n\t\t\t\tcase \"chr\": result.char = xml.attr(el, \"val\"); break;\n\t\t\t\tcase \"degHide\": result.hideDegree = xml.boolAttr(el, \"val\"); break;\n\t\t\t\tcase \"begChr\": result.beginChar = xml.attr(el, \"val\"); break;\n\t\t\t\tcase \"endChr\": result.endChar = xml.attr(el, \"val\"); break;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseRunProperties(elem: Element, run: WmlRun) {\n\t\tthis.parseDefaultProperties(elem, run.cssStyle = {}, null, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"rStyle\":\n\t\t\t\t\trun.styleName = xml.attr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vertAlign\":\n\t\t\t\t\trun.verticalAlign = values.valueOfVertAlign(c, true);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tparseVmlPicture(elem: Element): OpenXmlElement {\n\t\tconst result = { type: DomType.VmlPicture, children: [] };\n\n\t\tfor (const el of xml.elements(elem)) {\n\t\t\tconst child = parseVmlElement(el);\n\t\t\tchild && result.children.push(child);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tcheckAlternateContent(elem: Element): Element {\n\t\tif (elem.localName != 'AlternateContent')\n\t\t\treturn elem;\n\n\t\tvar choice = xml.element(elem, \"Choice\");\n\n\t\tif (choice) {\n\t\t\tvar requires = xml.attr(choice, \"Requires\");\n\t\t\tvar namespaceURI = elem.lookupNamespaceURI(requires);\n\n\t\t\tif (supportedNamespaceURIs.includes(namespaceURI))\n\t\t\t\treturn choice.firstElementChild;\n\t\t}\n\n\t\treturn xml.element(elem, \"Fallback\")?.firstElementChild;\n\t}\n\n\tparseDrawing(node: Element): OpenXmlElement {\n\t\tfor (var n of xml.elements(node)) {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"inline\":\n\t\t\t\tcase \"anchor\":\n\t\t\t\t\treturn this.parseDrawingWrapper(n);\n\t\t\t}\n\t\t}\n\t}\n\n\tparseDrawingWrapper(node: Element): OpenXmlElement {\n\t\tvar result = <OpenXmlElement>{ type: DomType.Drawing, children: [], cssStyle: {} };\n\t\tvar isAnchor = node.localName == \"anchor\";\n\n\t\t//TODO\n\t\t// result.style[\"margin-left\"] = xml.sizeAttr(node, \"distL\", SizeType.Emu);\n\t\t// result.style[\"margin-top\"] = xml.sizeAttr(node, \"distT\", SizeType.Emu);\n\t\t// result.style[\"margin-right\"] = xml.sizeAttr(node, \"distR\", SizeType.Emu);\n\t\t// result.style[\"margin-bottom\"] = xml.sizeAttr(node, \"distB\", SizeType.Emu);\n\n\t\tlet wrapType: \"wrapTopAndBottom\" | \"wrapNone\" | null = null;\n\t\tlet simplePos = xml.boolAttr(node, \"simplePos\");\n\n\t\tlet posX = { relative: \"page\", align: \"left\", offset: \"0\" };\n\t\tlet posY = { relative: \"page\", align: \"top\", offset: \"0\" };\n\n\t\tfor (var n of xml.elements(node)) {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"simplePos\":\n\t\t\t\t\tif (simplePos) {\n\t\t\t\t\t\tposX.offset = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\n\t\t\t\t\t\tposY.offset = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"extent\":\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"positionH\":\n\t\t\t\tcase \"positionV\":\n\t\t\t\t\tif (!simplePos) {\n\t\t\t\t\t\tlet pos = n.localName == \"positionH\" ? posX : posY;\n\t\t\t\t\t\tvar alignNode = xml.element(n, \"align\");\n\t\t\t\t\t\tvar offsetNode = xml.element(n, \"posOffset\");\n\n\t\t\t\t\t\tpos.relative = xml.attr(n, \"relativeFrom\") ?? pos.relative;\n\n\t\t\t\t\t\tif (alignNode)\n\t\t\t\t\t\t\tpos.align = alignNode.textContent;\n\n\t\t\t\t\t\tif (offsetNode)\n\t\t\t\t\t\t\tpos.offset = xmlUtil.sizeValue(offsetNode, LengthUsage.Emu);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"wrapTopAndBottom\":\n\t\t\t\t\twrapType = \"wrapTopAndBottom\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"wrapNone\":\n\t\t\t\t\twrapType = \"wrapNone\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"graphic\":\n\t\t\t\t\tvar g = this.parseGraphic(n);\n\n\t\t\t\t\tif (g)\n\t\t\t\t\t\tresult.children.push(g);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (wrapType == \"wrapTopAndBottom\") {\n\t\t\tresult.cssStyle['display'] = 'block';\n\n\t\t\tif (posX.align) {\n\t\t\t\tresult.cssStyle['text-align'] = posX.align;\n\t\t\t\tresult.cssStyle['width'] = \"100%\";\n\t\t\t}\n\t\t}\n\t\telse if (wrapType == \"wrapNone\") {\n\t\t\tresult.cssStyle['display'] = 'block';\n\t\t\tresult.cssStyle['position'] = 'relative';\n\t\t\tresult.cssStyle[\"width\"] = \"0px\";\n\t\t\tresult.cssStyle[\"height\"] = \"0px\";\n\n\t\t\tif (posX.offset)\n\t\t\t\tresult.cssStyle[\"left\"] = posX.offset;\n\t\t\tif (posY.offset)\n\t\t\t\tresult.cssStyle[\"top\"] = posY.offset;\n\t\t}\n\t\telse if (isAnchor && (posX.align == 'left' || posX.align == 'right')) {\n\t\t\tresult.cssStyle[\"float\"] = posX.align;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseGraphic(elem: Element): OpenXmlElement {\n\t\tvar graphicData = xml.element(elem, \"graphicData\");\n\n\t\tfor (let n of xml.elements(graphicData)) {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"pic\":\n\t\t\t\t\treturn this.parsePicture(n);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tparsePicture(elem: Element): IDomImage {\n\t\tvar result = <IDomImage>{ type: DomType.Image, src: \"\", cssStyle: {} };\n\t\tvar blipFill = xml.element(elem, \"blipFill\");\n\t\tvar blip = xml.element(blipFill, \"blip\");\n\n\t\tresult.src = xml.attr(blip, \"embed\");\n\n\t\tvar spPr = xml.element(elem, \"spPr\");\n\t\tvar xfrm = xml.element(spPr, \"xfrm\");\n\n\t\tresult.cssStyle[\"position\"] = \"relative\";\n\n\t\tfor (var n of xml.elements(xfrm)) {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"ext\":\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(n, \"cx\", LengthUsage.Emu);\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(n, \"cy\", LengthUsage.Emu);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"off\":\n\t\t\t\t\tresult.cssStyle[\"left\"] = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\n\t\t\t\t\tresult.cssStyle[\"top\"] = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseTable(node: Element): WmlTable {\n\t\tvar result: WmlTable = { type: DomType.Table, children: [] };\n\n\t\txmlUtil.foreach(node, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"tr\":\n\t\t\t\t\tresult.children.push(this.parseTableRow(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblGrid\":\n\t\t\t\t\tresult.columns = this.parseTableColumns(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblPr\":\n\t\t\t\t\tthis.parseTableProperties(c, result);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableColumns(node: Element): WmlTableColumn[] {\n\t\tvar result = [];\n\n\t\txmlUtil.foreach(node, n => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"gridCol\":\n\t\t\t\t\tresult.push({ width: xml.lengthAttr(n, \"w\") });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableProperties(elem: Element, table: WmlTable) {\n\t\ttable.cssStyle = {};\n\t\ttable.cellStyle = {};\n\n\t\tthis.parseDefaultProperties(elem, table.cssStyle, table.cellStyle, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"tblStyle\":\n\t\t\t\t\ttable.styleName = xml.attr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblLook\":\n\t\t\t\t\ttable.className = values.classNameOftblLook(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblpPr\":\n\t\t\t\t\tthis.parseTablePosition(c, table);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblStyleColBandSize\":\n\t\t\t\t\ttable.colBandSize = xml.intAttr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblStyleRowBandSize\":\n\t\t\t\t\ttable.rowBandSize = xml.intAttr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tswitch (table.cssStyle[\"text-align\"]) {\n\t\t\tcase \"center\":\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\n\t\t\t\ttable.cssStyle[\"margin-right\"] = \"auto\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"right\":\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tparseTablePosition(node: Element, table: WmlTable) {\n\t\tvar topFromText = xml.lengthAttr(node, \"topFromText\");\n\t\tvar bottomFromText = xml.lengthAttr(node, \"bottomFromText\");\n\t\tvar rightFromText = xml.lengthAttr(node, \"rightFromText\");\n\t\tvar leftFromText = xml.lengthAttr(node, \"leftFromText\");\n\n\t\ttable.cssStyle[\"float\"] = 'left';\n\t\ttable.cssStyle[\"margin-bottom\"] = values.addSize(table.cssStyle[\"margin-bottom\"], bottomFromText);\n\t\ttable.cssStyle[\"margin-left\"] = values.addSize(table.cssStyle[\"margin-left\"], leftFromText);\n\t\ttable.cssStyle[\"margin-right\"] = values.addSize(table.cssStyle[\"margin-right\"], rightFromText);\n\t\ttable.cssStyle[\"margin-top\"] = values.addSize(table.cssStyle[\"margin-top\"], topFromText);\n\t}\n\n\tparseTableRow(node: Element): WmlTableRow {\n\t\tvar result: WmlTableRow = { type: DomType.Row, children: [] };\n\n\t\txmlUtil.foreach(node, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"tc\":\n\t\t\t\t\tresult.children.push(this.parseTableCell(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"trPr\":\n\t\t\t\t\tthis.parseTableRowProperties(c, result);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableRowProperties(elem: Element, row: WmlTableRow) {\n\t\trow.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"cnfStyle\":\n\t\t\t\t\trow.className = values.classNameOfCnfStyle(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblHeader\":\n\t\t\t\t\trow.isHeader = xml.boolAttr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tparseTableCell(node: Element): OpenXmlElement {\n\t\tvar result: WmlTableCell = { type: DomType.Cell, children: [] };\n\n\t\txmlUtil.foreach(node, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"tbl\":\n\t\t\t\t\tresult.children.push(this.parseTable(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"p\":\n\t\t\t\t\tresult.children.push(this.parseParagraph(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tcPr\":\n\t\t\t\t\tthis.parseTableCellProperties(c, result);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableCellProperties(elem: Element, cell: WmlTableCell) {\n\t\tcell.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"gridSpan\":\n\t\t\t\t\tcell.span = xml.intAttr(c, \"val\", null);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vMerge\":\n\t\t\t\t\tcell.verticalMerge = xml.attr(c, \"val\") ?? \"continue\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"cnfStyle\":\n\t\t\t\t\tcell.className = values.classNameOfCnfStyle(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tparseDefaultProperties(elem: Element, style: Record<string, string> = null, childStyle: Record<string, string> = null, handler: (prop: Element) => boolean = null): Record<string, string> {\n\t\tstyle = style || {};\n\n\t\txmlUtil.foreach(elem, c => {\n\t\t\tif (handler?.(c))\n\t\t\t\treturn;\n\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"jc\":\n\t\t\t\t\tstyle[\"text-align\"] = values.valueOfJc(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"textAlignment\":\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"color\":\n\t\t\t\t\tstyle[\"color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.color);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"sz\":\n\t\t\t\t\tstyle[\"font-size\"] = style[\"min-height\"] = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"shd\":\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"fill\", null, autos.shd);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"highlight\":\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(c, \"val\", null, autos.highlight);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vertAlign\":\n\t\t\t\t\t//TODO\n\t\t\t\t\t// style.verticalAlign = values.valueOfVertAlign(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"position\":\n\t\t\t\t\tstyle.verticalAlign = xml.lengthAttr(c, \"val\", LengthUsage.FontSize);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tcW\":\n\t\t\t\t\tif (this.options.ignoreWidth)\n\t\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblW\":\n\t\t\t\t\tstyle[\"width\"] = values.valueOfSize(c, \"w\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"trHeight\":\n\t\t\t\t\tthis.parseTrHeight(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"strike\":\n\t\t\t\t\tstyle[\"text-decoration\"] = xml.boolAttr(c, \"val\", true) ? \"line-through\" : \"none\"\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"b\":\n\t\t\t\t\tstyle[\"font-weight\"] = xml.boolAttr(c, \"val\", true) ? \"bold\" : \"normal\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"i\":\n\t\t\t\t\tstyle[\"font-style\"] = xml.boolAttr(c, \"val\", true) ? \"italic\" : \"normal\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"caps\":\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"uppercase\" : \"none\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"smallCaps\":\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true) ? \"lowercase\" : \"none\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"u\":\n\t\t\t\t\tthis.parseUnderline(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ind\":\n\t\t\t\tcase \"tblInd\":\n\t\t\t\t\tthis.parseIndentation(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rFonts\":\n\t\t\t\t\tthis.parseFont(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblBorders\":\n\t\t\t\t\tthis.parseBorderProperties(c, childStyle || style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblCellSpacing\":\n\t\t\t\t\tstyle[\"border-spacing\"] = values.valueOfMargin(c);\n\t\t\t\t\tstyle[\"border-collapse\"] = \"separate\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pBdr\":\n\t\t\t\t\tthis.parseBorderProperties(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bdr\":\n\t\t\t\t\tstyle[\"border\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tcBorders\":\n\t\t\t\t\tthis.parseBorderProperties(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vanish\":\n\t\t\t\t\tif (xml.boolAttr(c, \"val\", true))\n\t\t\t\t\t\tstyle[\"display\"] = \"none\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"kern\":\n\t\t\t\t\t//TODO\n\t\t\t\t\t//style['letter-spacing'] = xml.lengthAttr(elem, 'val', LengthUsage.FontSize);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"noWrap\":\n\t\t\t\t\t//TODO\n\t\t\t\t\t//style[\"white-space\"] = \"nowrap\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblCellMar\":\n\t\t\t\tcase \"tcMar\":\n\t\t\t\t\tthis.parseMarginProperties(c, childStyle || style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblLayout\":\n\t\t\t\t\tstyle[\"table-layout\"] = values.valueOfTblLayout(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vAlign\":\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"spacing\":\n\t\t\t\t\tif (elem.localName == \"pPr\")\n\t\t\t\t\t\tthis.parseSpacing(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"wordWrap\":\n\t\t\t\t\tif (xml.boolAttr(c, \"val\")) //TODO: test with examples\n\t\t\t\t\t\tstyle[\"overflow-wrap\"] = \"break-word\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bCs\":\n\t\t\t\tcase \"iCs\":\n\t\t\t\tcase \"szCs\":\n\t\t\t\tcase \"tabs\": //ignore - tabs is parsed by other parser\n\t\t\t\tcase \"outlineLvl\": //TODO\n\t\t\t\tcase \"contextualSpacing\": //TODO\n\t\t\t\tcase \"tblStyleColBandSize\": //TODO\n\t\t\t\tcase \"tblStyleRowBandSize\": //TODO\n\t\t\t\tcase \"webHidden\": //TODO - maybe web-hidden should be implemented\n\t\t\t\tcase \"pageBreakBefore\": //TODO - maybe ignore \n\t\t\t\tcase \"suppressLineNumbers\": //TODO - maybe ignore\n\t\t\t\tcase \"keepLines\": //TODO - maybe ignore\n\t\t\t\tcase \"keepNext\": //TODO - maybe ignore\n\t\t\t\tcase \"lang\":\n\t\t\t\tcase \"widowControl\": //TODO - maybe ignore \n\t\t\t\tcase \"bidi\": //TODO - maybe ignore\n\t\t\t\tcase \"rtl\": //TODO - maybe ignore\n\t\t\t\tcase \"noProof\": //ignore spellcheck\n\t\t\t\t\t//TODO ignore\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (this.options.debug)\n\t\t\t\t\t\tconsole.warn(`DOCX: Unknown document element: ${elem.localName}.${c.localName}`);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn style;\n\t}\n\n\tparseUnderline(node: Element, style: Record<string, string>) {\n\t\tvar val = xml.attr(node, \"val\");\n\n\t\tif (val == null)\n\t\t\treturn;\n\n\t\tswitch (val) {\n\t\t\tcase \"dash\":\n\t\t\tcase \"dashDotDotHeavy\":\n\t\t\tcase \"dashDotHeavy\":\n\t\t\tcase \"dashedHeavy\":\n\t\t\tcase \"dashLong\":\n\t\t\tcase \"dashLongHeavy\":\n\t\t\tcase \"dotDash\":\n\t\t\tcase \"dotDotDash\":\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dashed\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"dotted\":\n\t\t\tcase \"dottedHeavy\":\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dotted\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"double\":\n\t\t\t\tstyle[\"text-decoration-style\"] = \"double\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"single\":\n\t\t\tcase \"thick\":\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"wave\":\n\t\t\tcase \"wavyDouble\":\n\t\t\tcase \"wavyHeavy\":\n\t\t\t\tstyle[\"text-decoration-style\"] = \"wavy\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"words\":\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"none\":\n\t\t\t\tstyle[\"text-decoration\"] = \"none\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvar col = xmlUtil.colorAttr(node, \"color\");\n\n\t\tif (col)\n\t\t\tstyle[\"text-decoration-color\"] = col;\n\t}\n\n\tparseFont(node: Element, style: Record<string, string>) {\n\t\tvar ascii = xml.attr(node, \"ascii\");\n\t\tvar asciiTheme = values.themeValue(node, \"asciiTheme\");\n\n\t\tvar fonts = [ascii, asciiTheme].filter(x => x).join(', ');\n\n\t\tif (fonts.length > 0)\n\t\t\tstyle[\"font-family\"] = fonts;\n\t}\n\n\tparseIndentation(node: Element, style: Record<string, string>) {\n\t\tvar firstLine = xml.lengthAttr(node, \"firstLine\");\n\t\tvar hanging = xml.lengthAttr(node, \"hanging\");\n\t\tvar left = xml.lengthAttr(node, \"left\");\n\t\tvar start = xml.lengthAttr(node, \"start\");\n\t\tvar right = xml.lengthAttr(node, \"right\");\n\t\tvar end = xml.lengthAttr(node, \"end\");\n\n\t\tif (firstLine) style[\"text-indent\"] = firstLine;\n\t\tif (hanging) style[\"text-indent\"] = `-${hanging}`;\n\t\tif (left || start) style[\"margin-left\"] = left || start;\n\t\tif (right || end) style[\"margin-right\"] = right || end;\n\t}\n\n\tparseSpacing(node: Element, style: Record<string, string>) {\n\t\tvar before = xml.lengthAttr(node, \"before\");\n\t\tvar after = xml.lengthAttr(node, \"after\");\n\t\tvar line = xml.intAttr(node, \"line\", null);\n\t\tvar lineRule = xml.attr(node, \"lineRule\");\n\n\t\tif (before) style[\"margin-top\"] = before;\n\t\tif (after) style[\"margin-bottom\"] = after;\n\n\t\tif (line !== null) {\n\t\t\tswitch (lineRule) {\n\t\t\t\tcase \"auto\":\n\t\t\t\t\tstyle[\"line-height\"] = `${(line / 240).toFixed(2)}`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"atLeast\":\n\t\t\t\t\tstyle[\"line-height\"] = `calc(100% + ${line / 20}pt)`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tstyle[\"line-height\"] = style[\"min-height\"] = `${line / 20}pt`\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tparseMarginProperties(node: Element, output: Record<string, string>) {\n\t\txmlUtil.foreach(node, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"left\":\n\t\t\t\t\toutput[\"padding-left\"] = values.valueOfMargin(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"right\":\n\t\t\t\t\toutput[\"padding-right\"] = values.valueOfMargin(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"top\":\n\t\t\t\t\toutput[\"padding-top\"] = values.valueOfMargin(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bottom\":\n\t\t\t\t\toutput[\"padding-bottom\"] = values.valueOfMargin(c);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n\n\tparseTrHeight(node: Element, output: Record<string, string>) {\n\t\tswitch (xml.attr(node, \"hRule\")) {\n\t\t\tcase \"exact\":\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"atLeast\":\n\t\t\tdefault:\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\n\t\t\t\t// min-height doesn't work for tr\n\t\t\t\t//output[\"min-height\"] = xml.sizeAttr(node, \"val\");  \n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tparseBorderProperties(node: Element, output: Record<string, string>) {\n\t\txmlUtil.foreach(node, c => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"start\":\n\t\t\t\tcase \"left\":\n\t\t\t\t\toutput[\"border-left\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"end\":\n\t\t\t\tcase \"right\":\n\t\t\t\t\toutput[\"border-right\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"top\":\n\t\t\t\t\toutput[\"border-top\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bottom\":\n\t\t\t\t\toutput[\"border-bottom\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n}\n\nconst knownColors = ['black', 'blue', 'cyan', 'darkBlue', 'darkCyan', 'darkGray', 'darkGreen', 'darkMagenta', 'darkRed', 'darkYellow', 'green', 'lightGray', 'magenta', 'none', 'red', 'white', 'yellow'];\n\nclass xmlUtil {\n\tstatic foreach(node: Element, cb: (n: Element) => void) {\n\t\tfor (var i = 0; i < node.childNodes.length; i++) {\n\t\t\tlet n = node.childNodes[i];\n\n\t\t\tif (n.nodeType == Node.ELEMENT_NODE)\n\t\t\t\tcb(<Element>n);\n\t\t}\n\t}\n\n\tstatic colorAttr(node: Element, attrName: string, defValue: string = null, autoColor: string = 'black') {\n\t\tvar v = xml.attr(node, attrName);\n\n\t\tif (v) {\n\t\t\tif (v == \"auto\") {\n\t\t\t\treturn autoColor;\n\t\t\t} else if (knownColors.includes(v)) {\n\t\t\t\treturn v;\n\t\t\t}\n\n\t\t\treturn `#${v}`;\n\t\t}\n\n\t\tvar themeColor = xml.attr(node, \"themeColor\");\n\n\t\treturn themeColor ? `var(--docx-${themeColor}-color)` : defValue;\n\t}\n\n\tstatic sizeValue(node: Element, type: LengthUsageType = LengthUsage.Dxa) {\n\t\treturn convertLength(node.textContent, type);\n\t}\n}\n\nclass values {\n\tstatic themeValue(c: Element, attr: string) {\n\t\tvar val = xml.attr(c, attr);\n\t\treturn val ? `var(--docx-${val}-font)` : null;\n\t}\n\n\tstatic valueOfSize(c: Element, attr: string) {\n\t\tvar type = LengthUsage.Dxa;\n\n\t\tswitch (xml.attr(c, \"type\")) {\n\t\t\tcase \"dxa\": break;\n\t\t\tcase \"pct\": type = LengthUsage.Percent; break;\n\t\t\tcase \"auto\": return \"auto\";\n\t\t}\n\n\t\treturn xml.lengthAttr(c, attr, type);\n\t}\n\n\tstatic valueOfMargin(c: Element) {\n\t\treturn xml.lengthAttr(c, \"w\");\n\t}\n\n\tstatic valueOfBorder(c: Element) {\n\t\tvar type = xml.attr(c, \"val\");\n\n\t\tif (type == \"nil\")\n\t\t\treturn \"none\";\n\n\t\tvar color = xmlUtil.colorAttr(c, \"color\");\n\t\tvar size = xml.lengthAttr(c, \"sz\", LengthUsage.Border);\n\n\t\treturn `${size} solid ${color == \"auto\" ? autos.borderColor : color}`;\n\t}\n\n\tstatic valueOfTblLayout(c: Element) {\n\t\tvar type = xml.attr(c, \"val\");\n\t\treturn type == \"fixed\" ? \"fixed\" : \"auto\";\n\t}\n\n\tstatic classNameOfCnfStyle(c: Element) {\n\t\tconst val = xml.attr(c, \"val\");\n\t\tconst classes = [\n\t\t\t'first-row', 'last-row', 'first-col', 'last-col',\n\t\t\t'odd-col', 'even-col', 'odd-row', 'even-row',\n\t\t\t'ne-cell', 'nw-cell', 'se-cell', 'sw-cell'\n\t\t];\n\n\t\treturn classes.filter((_, i) => val[i] == '1').join(' ');\n\t}\n\n\tstatic valueOfJc(c: Element) {\n\t\tvar type = xml.attr(c, \"val\");\n\n\t\tswitch (type) {\n\t\t\tcase \"start\":\n\t\t\tcase \"left\": return \"left\";\n\t\t\tcase \"center\": return \"center\";\n\t\t\tcase \"end\":\n\t\t\tcase \"right\": return \"right\";\n\t\t\tcase \"both\": return \"justify\";\n\t\t}\n\n\t\treturn type;\n\t}\n\n\tstatic valueOfVertAlign(c: Element, asTagName: boolean = false) {\n\t\tvar type = xml.attr(c, \"val\");\n\n\t\tswitch (type) {\n\t\t\tcase \"subscript\": return \"sub\";\n\t\t\tcase \"superscript\": return asTagName ? \"sup\" : \"super\";\n\t\t}\n\n\t\treturn asTagName ? null : type;\n\t}\n\n\tstatic valueOfTextAlignment(c: Element) {\n\t\tvar type = xml.attr(c, \"val\");\n\n\t\tswitch (type) {\n\t\t\tcase \"auto\":\n\t\t\tcase \"baseline\": return \"baseline\";\n\t\t\tcase \"top\": return \"top\";\n\t\t\tcase \"center\": return \"middle\";\n\t\t\tcase \"bottom\": return \"bottom\";\n\t\t}\n\n\t\treturn type;\n\t}\n\n\tstatic addSize(a: string, b: string): string {\n\t\tif (a == null) return b;\n\t\tif (b == null) return a;\n\n\t\treturn `calc(${a} + ${b})`; //TODO\n\t}\n\n\tstatic classNameOftblLook(c: Element) {\n\t\tconst val = xml.hexAttr(c, \"val\", 0);\n\t\tlet className = \"\";\n\n\t\tif (xml.boolAttr(c, \"firstRow\") || (val & 0x0020)) className += \" first-row\";\n\t\tif (xml.boolAttr(c, \"lastRow\") || (val & 0x0040)) className += \" last-row\";\n\t\tif (xml.boolAttr(c, \"firstColumn\") || (val & 0x0080)) className += \" first-col\";\n\t\tif (xml.boolAttr(c, \"lastColumn\") || (val & 0x0100)) className += \" last-col\";\n\t\tif (xml.boolAttr(c, \"noHBand\") || (val & 0x0200)) className += \" no-hband\";\n\t\tif (xml.boolAttr(c, \"noVBand\") || (val & 0x0400)) className += \" no-vband\";\n\n\t\treturn className.trim();\n\t}\n}\n","import { Part } from \"../common/part\";\nimport { CorePropsDeclaration, parseCoreProps } from \"./core-props\";\n\nexport class CorePropsPart extends Part {\n    props: CorePropsDeclaration;\n\n    parseXml(root: Element) {\n        this.props = parseCoreProps(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport interface CorePropsDeclaration {\n    title: string,\n    description: string,\n    subject: string,\n    creator: string,\n    keywords: string,\n    language: string,\n    lastModifiedBy: string,\n    revision: number,\n}\n\nexport function parseCoreProps(root: Element, xmlParser: XmlParser): CorePropsDeclaration {\n    const result = <CorePropsDeclaration>{};\n\n    for (let el of xmlParser.elements(root)) {\n        switch (el.localName) {\n            case \"title\": result.title = el.textContent; break;\n            case \"description\": result.description = el.textContent; break;\n            case \"subject\": result.subject = el.textContent; break;\n            case \"creator\": result.creator = el.textContent; break;\n            case \"keywords\": result.keywords = el.textContent; break;\n            case \"language\": result.language = el.textContent; break;\n            case \"lastModifiedBy\": result.lastModifiedBy = el.textContent; break;\n            case \"revision\": el.textContent && (result.revision = parseInt(el.textContent)); break;\n        }\n    }\n\n    return result;\n}","import { Part } from \"../common/part\";\nimport { CustomProperty, parseCustomProps } from \"./custom-props\";\n\nexport class CustomPropsPart extends Part {\n    props: CustomProperty[];\n\n    parseXml(root: Element) {\n        this.props = parseCustomProps(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport interface CustomProperty {\n\tformatId: string;\n\tname: string;\n\ttype: string;\n\tvalue: string;\n}\n\nexport function parseCustomProps(root: Element, xml: XmlParser): CustomProperty[] {\n\treturn xml.elements(root, \"property\").map(e => {\n\t\tconst firstChild = e.firstChild;\n\n\t\treturn {\n\t\t\tformatId: xml.attr(e, \"fmtid\"),\n\t\t\tname: xml.attr(e, \"name\"),\n\t\t\ttype: firstChild.nodeName,\n\t\t\tvalue: firstChild.textContent\n\t\t};\n\t});\n}","import { Part } from \"../common/part\";\nimport { ExtendedPropsDeclaration, parseExtendedProps } from \"./extended-props\";\n\nexport class ExtendedPropsPart extends Part {\n    props: ExtendedPropsDeclaration;\n\n    parseXml(root: Element) {\n        this.props = parseExtendedProps(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport interface ExtendedPropsDeclaration {\n    template: string,\n    totalTime: number,\n    pages: number,\n    words: number,\n    characters: number,\n    application: string,\n    lines: number,\n    paragraphs: number,\n    company: string,\n    appVersion: string\n}\n\nexport function parseExtendedProps(root: Element, xmlParser: XmlParser): ExtendedPropsDeclaration {\n    const result = <ExtendedPropsDeclaration>{\n\n    };\n\n    for (let el of xmlParser.elements(root)) {\n        switch (el.localName) {\n            case \"Template\":\n                result.template = el.textContent;\n                break;\n            case \"Pages\":\n                result.pages = safeParseToInt(el.textContent);\n                break;\n            case \"Words\":\n                result.words = safeParseToInt(el.textContent);\n                break;\n            case \"Characters\":\n                result.characters = safeParseToInt(el.textContent);\n                break;\n            case \"Application\":\n                result.application = el.textContent;\n                break;\n            case \"Lines\":\n                result.lines = safeParseToInt(el.textContent);\n                break;\n            case \"Paragraphs\":\n                result.paragraphs = safeParseToInt(el.textContent);\n                break;\n            case \"Company\":\n                result.company = el.textContent;\n                break;\n            case \"AppVersion\":\n                result.appVersion = el.textContent;\n                break;\n        }\n    }\n\n    return result;\n}\n\nfunction safeParseToInt(value: string): number {\n    if (typeof value === 'undefined')\n        return;\n    return parseInt(value);\n}","import { XmlParser } from \"../parser/xml-parser\";\nimport { DomType, OpenXmlElement } from \"./dom\";\n\nexport interface WmlBookmarkStart extends OpenXmlElement {\n    id: string;\n    name: string;\n    colFirst: number;\n    colLast: number;\n}\n\nexport interface WmlBookmarkEnd extends OpenXmlElement {\n    id: string;\n}\n\nexport function parseBookmarkStart(elem: Element, xml: XmlParser): WmlBookmarkStart {\n    return {\n        type: DomType.BookmarkStart,\n        id: xml.attr(elem, \"id\"),\n        name: xml.attr(elem, \"name\"),\n        colFirst: xml.intAttr(elem, \"colFirst\"),\n        colLast: xml.intAttr(elem, \"colLast\")\n    }\n}\n\nexport function parseBookmarkEnd(elem: Element, xml: XmlParser): WmlBookmarkEnd {\n    return {\n        type: DomType.BookmarkEnd,\n        id: xml.attr(elem, \"id\")\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\nimport { Length, LengthUsage } from \"./common\";\n\nexport interface Border {\n    color: string;\n    type: string;\n    size: Length;\n    frame: boolean;\n    shadow: boolean;\n    offset: Length;\n}\n\nexport interface Borders {\n    top: Border;\n    left: Border;\n    right: Border;\n    bottom: Border;\n}\n\nexport function parseBorder(elem: Element, xml: XmlParser): Border {\n    return {\n        type: xml.attr(elem, \"val\"),\n        color: xml.attr(elem, \"color\"),\n        size: xml.lengthAttr(elem, \"sz\", LengthUsage.Border),\n        offset: xml.lengthAttr(elem, \"space\", LengthUsage.Point),\n        frame: xml.boolAttr(elem, 'frame'),\n        shadow: xml.boolAttr(elem, 'shadow')\n    };\n}\n\nexport function parseBorders(elem: Element, xml: XmlParser): Borders {\n    var result = <Borders>{};\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"left\": result.left = parseBorder(e, xml); break;\n            case \"top\": result.top = parseBorder(e, xml); break;\n            case \"right\": result.right = parseBorder(e, xml); break;\n            case \"bottom\": result.bottom = parseBorder(e, xml); break;\n        }\n    }\n\n    return result;\n}","import { DomType, OpenXmlElement } from \"./dom\";\nimport xml from '../parser/xml-parser';\n\nexport interface WmlCheckboxFormField extends OpenXmlElement {\n\tname: string,\n\tchecked: boolean,\n}\n\nconst checkboxDefaultName = \"unknownCheckbox\";\n\nconst getName = (checkboxElement: Element) => {\n\tconst parentElement = checkboxElement.parentElement;\n\tif (!parentElement) return checkboxDefaultName;\n\tconst statusTextElement = parentElement.getElementsByTagName(\"w:statusText\")[0];\n\tconst statusTextName = statusTextElement ? xml.attr(statusTextElement, \"val\") : \"\";\n\tif (statusTextName) return statusTextName;\n\n\tconst nameElement = parentElement.getElementsByTagName(\"w:name\")[0];\n\tconst nameNodeText = nameElement ? xml.attr(nameElement, \"val\") : \"\";\n\treturn nameNodeText || checkboxDefaultName;\n}\n\nconst getDefaultChecked = (checkboxElement: Element) => {\n\tconst defaultElement = checkboxElement.getElementsByTagName(\"w:default\")[0];\n\treturn defaultElement ? xml.boolAttr(defaultElement, \"val\", false) : false;\n}\n\nconst parseCheckbox = (element: Element): WmlCheckboxFormField | null => {\n\tconst checkboxElement = element.getElementsByTagName(\"w:checkBox\")[0];\n\tif (!checkboxElement) return null;\n\n\treturn {\n\t\ttype: DomType.CheckboxFormField,\n\t\tname: getName(checkboxElement),\n\t\tchecked: getDefaultChecked(checkboxElement),\n\t}\n}\n\nexport { parseCheckbox }\n","import { XmlParser } from \"../parser/xml-parser\";\n\nexport const ns = {\n    wordml: \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\",\n    drawingml: \"http://schemas.openxmlformats.org/drawingml/2006/main\",\n    picture: \"http://schemas.openxmlformats.org/drawingml/2006/picture\",\n\tcompatibility: \"http://schemas.openxmlformats.org/markup-compatibility/2006\",\n\tmath: \"http://schemas.openxmlformats.org/officeDocument/2006/math\"\n}\n\nexport type LengthType = \"px\" | \"pt\" | \"%\" | \"\";\nexport type Length = string;\n\nexport interface Font {\n    name: string;\n    family: string;\n}\n\nexport interface CommonProperties {\n    fontSize: Length;\n    color: string;\n}\n\nexport type LengthUsageType = { mul: number, unit: LengthType };\n\nexport const LengthUsage: Record<string, LengthUsageType> = {\n    Dxa: { mul: 0.05, unit: \"pt\" }, //twips\n    Emu: { mul: 1 / 12700, unit: \"pt\" },\n    FontSize: { mul: 0.5, unit: \"pt\" },\n    Border: { mul: 0.125, unit: \"pt\" },\n    Point: { mul: 1, unit: \"pt\" },\n    Percent: { mul: 0.02, unit: \"%\" },\n    LineHeight: { mul: 1 / 240, unit: \"\" },\n    VmlEmu: { mul: 1 / 12700, unit: \"\" },\n}\n\nexport function convertLength(val: string, usage: LengthUsageType = LengthUsage.Dxa): string {\n    //\"simplified\" docx documents use pt's as units\n    if (val == null || /.+(p[xt]|[%])$/.test(val)) {\n        return val;\n    }\n\n\treturn `${(parseInt(val) * usage.mul).toFixed(2)}${usage.unit}`;\n}\n\nexport function convertBoolean(v: string, defaultValue = false): boolean {\n    switch (v) {\n        case \"1\": return true;\n        case \"0\": return false;\n        case \"on\": return true;\n        case \"off\": return false;\n        case \"true\": return true;\n        case \"false\": return false;\n        default: return defaultValue;\n    }\n}\n\nexport function convertPercentage(val: string): number {\n    return val ? parseInt(val) / 100 : null;\n}\n\nexport function parseCommonProperty(elem: Element, props: CommonProperties, xml: XmlParser): boolean {\n    if(elem.namespaceURI != ns.wordml)\n        return false;\n\n    switch(elem.localName) {\n        case \"color\": \n            props.color = xml.attr(elem, \"val\");\n            break;\n\n        case \"sz\":\n            props.fontSize = xml.lengthAttr(elem, \"val\", LengthUsage.FontSize);\n            break;\n\n        default:\n            return false;\n    }\n\n    return true;\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { DocumentElement } from \"./document\";\n\nexport class DocumentPart extends Part {\n    private _documentParser: DocumentParser;\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n    \n    body: DocumentElement\n\n    parseXml(root: Element) {\n        this.body = this._documentParser.parseDocumentFile(root);\n    }\n}","export enum DomType {\n    Document = \"document\",\n    Paragraph = \"paragraph\",\n    Run = \"run\",\n    Break = \"break\",\n    NoBreakHyphen = \"noBreakHyphen\",\n    Table = \"table\",\n    Row = \"row\",\n    Cell = \"cell\",\n    Hyperlink = \"hyperlink\",\n    Drawing = \"drawing\",\n    Image = \"image\",\n    Text = \"text\",\n    Tab = \"tab\",\n    Symbol = \"symbol\",\n    BookmarkStart = \"bookmarkStart\",\n    BookmarkEnd = \"bookmarkEnd\",\n    Footer = \"footer\",\n    Header = \"header\",\n    FootnoteReference = \"footnoteReference\", \n\tEndnoteReference = \"endnoteReference\",\n    Footnote = \"footnote\",\n    Endnote = \"endnote\",\n    SimpleField = \"simpleField\",\n    ComplexField = \"complexField\",\n    Instruction = \"instruction\",\n\tVmlPicture = \"vmlPicture\",\n\tMmlMath = \"mmlMath\",\n\tMmlMathParagraph = \"mmlMathParagraph\",\n\tMmlFraction = \"mmlFraction\",\n\tMmlNumerator = \"mmlNumerator\",\n\tMmlDenominator = \"mmlDenominator\",\n\tMmlRadical = \"mmlRadical\",\n\tMmlBase = \"mmlBase\",\n\tMmlDegree = \"mmlDegree\",\n\tMmlSuperscript = \"mmlSuperscript\",\n\tMmlSubscript = \"mmlSubscript\",\n\tMmlSubArgument = \"mmlSubArgument\",\n\tMmlSuperArgument = \"mmlSuperArgument\",\n\tMmlNary = \"mmlNary\",\n\tMmlDelimiter = \"mmlDelimiter\",\n\tMmlRun = \"mmlRun\",\n\tVmlElement = \"vmlElement\",\n\tInserted = \"inserted\",\n\tDeleted = \"deleted\",\n\tDeletedText = \"deletedText\",\n\tCheckboxFormField = \"checkBoxFormField\"\n}\n\nexport interface OpenXmlElement {\n    type: DomType;\n    children?: OpenXmlElement[];\n    cssStyle?: Record<string, string>;\n    props?: Record<string, any>;\n    \n\tstyleName?: string; //style name\n\tclassName?: string; //class mods\n\n    parent?: OpenXmlElement;\n}\n\nexport interface WmlHyperlink extends OpenXmlElement {\n\tid?: string;\n    href?: string;\n}\n\nexport interface WmlNoteReference extends OpenXmlElement {\n    id: string;\n}\n\nexport interface WmlBreak extends OpenXmlElement{\n    break: \"page\" | \"lastRenderedPageBreak\" | \"textWrapping\";\n}\n\nexport interface WmlText extends OpenXmlElement{\n    text: string;\n}\n\nexport interface WmlSymbol extends OpenXmlElement {\n    font: string;\n    char: string;\n}\n\nexport interface WmlTable extends OpenXmlElement {\n    columns?: WmlTableColumn[];\n    cellStyle?: Record<string, string>;\n\n\tcolBandSize?: number;\n\trowBandSize?: number;\n}\n\nexport interface WmlTableRow extends OpenXmlElement {\n\tisHeader?: boolean;\n}\n\nexport interface WmlTableCell extends OpenXmlElement {\n\tverticalMerge?: 'restart' | 'continue' | string;\n    span?: number;\n}\n\nexport interface IDomImage extends OpenXmlElement {\n    src: string;\n}\n\nexport interface WmlTableColumn {\n    width?: string;\n}\n\nexport interface IDomNumbering {\n    id: string;\n    level: number;\n    pStyleName: string;\n    pStyle: Record<string, string>;\n    rStyle: Record<string, string>;\n    levelText?: string;\n    suff: string;\n    format?: string;\n    bullet?: NumberingPicBullet;\n}\n\nexport interface NumberingPicBullet {\n    id: number;\n    src: string;\n    style?: string;\n}\n","import { XmlParser } from \"../parser/xml-parser\";\nimport { Length } from \"./common\";\n\nexport interface LineSpacing {\n    after: Length;\n    before: Length;\n    line: number;\n    lineRule: \"atLeast\" | \"exactly\" | \"auto\";\n}\n\nexport function parseLineSpacing(elem: Element, xml: XmlParser): LineSpacing {\n    return {\n        before: xml.lengthAttr(elem, \"before\"),\n        after: xml.lengthAttr(elem, \"after\"),\n        line: xml.intAttr(elem, \"line\"),\n        lineRule: xml.attr(elem, \"lineRule\")\n    } as LineSpacing;\n}","import { OpenXmlElement } from \"./dom\";\nimport { CommonProperties, Length, ns, parseCommonProperty } from \"./common\";\nimport { Borders } from \"./border\";\nimport { parseSectionProperties, SectionProperties } from \"./section\";\nimport { LineSpacing, parseLineSpacing } from \"./line-spacing\";\nimport { XmlParser } from \"../parser/xml-parser\";\nimport { parseRunProperties, RunProperties } from \"./run\";\n\nexport interface WmlParagraph extends OpenXmlElement, ParagraphProperties {\n}\n\nexport interface ParagraphProperties extends CommonProperties {\n    sectionProps: SectionProperties;\n    tabs: ParagraphTab[];\n    numbering: ParagraphNumbering;\n\n    border: Borders;\n    textAlignment: \"auto\" | \"baseline\" | \"bottom\" | \"center\" | \"top\" | string;\n    lineSpacing: LineSpacing;\n    keepLines: boolean;\n    keepNext: boolean;\n    pageBreakBefore: boolean;\n    outlineLevel: number;\n\tstyleName?: string;\n\n    runProps: RunProperties;\n}\n\nexport interface ParagraphTab {\n    style: \"bar\" | \"center\" | \"clear\" | \"decimal\" | \"end\" | \"num\" | \"start\" | \"left\" | \"right\";\n    leader: \"none\" | \"dot\" | \"heavy\" | \"hyphen\" | \"middleDot\" | \"underscore\";\n    position: Length;\n}\n\nexport interface ParagraphNumbering {\n    id: string;\n    level: number;\n}\n\nexport function parseParagraphProperties(elem: Element, xml: XmlParser): ParagraphProperties {\n    let result = <ParagraphProperties>{};\n\n    for(let el of xml.elements(elem)) {\n        parseParagraphProperty(el, result, xml);\n    }\n\n    return result;\n}\n\nexport function parseParagraphProperty(elem: Element, props: ParagraphProperties, xml: XmlParser) {\n    if (elem.namespaceURI != ns.wordml)\n        return false;\n\n    if(parseCommonProperty(elem, props, xml))\n        return true;\n\n    switch (elem.localName) {\n        case \"tabs\":\n            props.tabs = parseTabs(elem, xml);\n            break;\n\n        case \"sectPr\":\n            props.sectionProps = parseSectionProperties(elem, xml);\n            break;\n\n        case \"numPr\":\n            props.numbering = parseNumbering(elem, xml);\n            break;\n        \n        case \"spacing\":\n            props.lineSpacing = parseLineSpacing(elem, xml);\n            return false; // TODO\n            break;\n\n        case \"textAlignment\":\n            props.textAlignment = xml.attr(elem, \"val\");\n            return false; //TODO\n            break;\n\n        case \"keepNext\":\n            props.keepLines = xml.boolAttr(elem, \"val\", true);\n            break;\n    \n        case \"keepNext\":\n            props.keepNext = xml.boolAttr(elem, \"val\", true);\n            break;\n        \n        case \"pageBreakBefore\":\n            props.pageBreakBefore = xml.boolAttr(elem, \"val\", true);\n            break;\n        \n        case \"outlineLvl\":\n            props.outlineLevel = xml.intAttr(elem, \"val\");\n            break;\n\n        case \"pStyle\":\n            props.styleName = xml.attr(elem, \"val\");\n            break;\n\n        case \"rPr\":\n            props.runProps = parseRunProperties(elem, xml);\n            break;\n        \n        default:\n            return false;\n    }\n\n    return true;\n}\n\nexport function parseTabs(elem: Element, xml: XmlParser): ParagraphTab[] {\n    return xml.elements(elem, \"tab\")\n        .map(e => <ParagraphTab>{\n            position: xml.lengthAttr(e, \"pos\"),\n            leader: xml.attr(e, \"leader\"),\n            style: xml.attr(e, \"val\")\n        });\n}\n\nexport function parseNumbering(elem: Element, xml: XmlParser): ParagraphNumbering {\n    var result = <ParagraphNumbering>{};\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"numId\":\n                result.id = xml.attr(e, \"val\");\n                break;\n\n            case \"ilvl\":\n                result.level = xml.intAttr(e, \"val\");\n                break;\n        }\n    }\n\n    return result;\n}","import { XmlParser } from \"../parser/xml-parser\";\nimport { CommonProperties, parseCommonProperty } from \"./common\";\nimport { OpenXmlElement } from \"./dom\";\n\nexport interface WmlRun extends OpenXmlElement, RunProperties {\n    id?: string;\n    verticalAlign?: string;\n\tfieldRun?: boolean;  \n}\n\nexport interface RunProperties extends CommonProperties {\n\n}\n\nexport function parseRunProperties(elem: Element, xml: XmlParser): RunProperties {\n    let result = <RunProperties>{};\n\n    for(let el of xml.elements(elem)) {\n        parseRunProperty(el, result, xml);\n    }\n\n    return result;\n}\n\nexport function parseRunProperty(elem: Element, props: RunProperties, xml: XmlParser) {\n    if (parseCommonProperty(elem, props, xml))\n        return true;\n\n    return false;\n}","import globalXmlParser, { XmlParser } from \"../parser/xml-parser\";\nimport { Borders, parseBorders } from \"./border\";\nimport { Length } from \"./common\";\n\nexport interface Column {\n    space: Length;\n    width: Length;\n}\n\nexport interface Columns {\n    space: Length;\n    numberOfColumns: number;\n    separator: boolean;\n    equalWidth: boolean;\n    columns: Column[];\n}\n\nexport interface PageSize {\n    width: Length, \n    height: Length, \n    orientation: \"landscape\" | string \n}\n\nexport interface PageNumber {\n    start: number;\n    chapSep: \"colon\" | \"emDash\" | \"endash\" | \"hyphen\" | \"period\" | string;\n    chapStyle: string;\n    format: \"none\" | \"cardinalText\" | \"decimal\" | \"decimalEnclosedCircle\" | \"decimalEnclosedFullstop\" \n        | \"decimalEnclosedParen\" | \"decimalZero\" | \"lowerLetter\" | \"lowerRoman\"\n        | \"ordinalText\" | \"upperLetter\" | \"upperRoman\" | string;\n}\n\nexport interface PageMargins {\n    top: Length;\n    right: Length;\n    bottom: Length;\n    left: Length;\n    header: Length;\n    footer: Length;\n    gutter: Length;\n}\n\nexport enum SectionType {\n    Continuous = \"continuous\",\n    NextPage = \"nextPage\", \n    NextColumn = \"nextColumn\",\n    EvenPage = \"evenPage\",\n    OddPage = \"oddPage\",\n}\n\nexport interface FooterHeaderReference {\n    id: string;\n    type: string | \"first\" | \"even\" | \"default\";\n}\n\nexport interface SectionProperties {\n    type: SectionType | string;\n    pageSize: PageSize,\n    pageMargins: PageMargins,\n    pageBorders: Borders;\n    pageNumber: PageNumber;\n    columns: Columns;\n    footerRefs: FooterHeaderReference[];\n    headerRefs: FooterHeaderReference[];\n    titlePage: boolean;\n}\n\nexport function parseSectionProperties(elem: Element, xml: XmlParser = globalXmlParser): SectionProperties {\n    var section = <SectionProperties>{};\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"pgSz\":\n                section.pageSize = {\n                    width: xml.lengthAttr(e, \"w\"),\n                    height: xml.lengthAttr(e, \"h\"),\n                    orientation: xml.attr(e, \"orient\")\n                }\n                break;\n\n            case \"type\":\n                section.type = xml.attr(e, \"val\");\n                break;\n\n            case \"pgMar\":\n                section.pageMargins = {\n                    left: xml.lengthAttr(e, \"left\"),\n                    right: xml.lengthAttr(e, \"right\"),\n                    top: xml.lengthAttr(e, \"top\"),\n                    bottom: xml.lengthAttr(e, \"bottom\"),\n                    header: xml.lengthAttr(e, \"header\"),\n                    footer: xml.lengthAttr(e, \"footer\"),\n                    gutter: xml.lengthAttr(e, \"gutter\"),\n                };\n                break;\n\n            case \"cols\":\n                section.columns = parseColumns(e, xml);\n                break;\n\n            case \"headerReference\":\n                (section.headerRefs ?? (section.headerRefs = [])).push(parseFooterHeaderReference(e, xml)); \n                break;\n            \n            case \"footerReference\":\n                (section.footerRefs ?? (section.footerRefs = [])).push(parseFooterHeaderReference(e, xml)); \n                break;\n\n            case \"titlePg\":\n                section.titlePage = xml.boolAttr(e, \"val\", true);\n                break;\n\n            case \"pgBorders\":\n                section.pageBorders = parseBorders(e, xml);\n                break;\n\n            case \"pgNumType\":\n                section.pageNumber = parsePageNumber(e, xml);\n                break;\n        }\n    }\n\n    return section;\n}\n\nfunction parseColumns(elem: Element, xml: XmlParser): Columns {\n    return {\n        numberOfColumns: xml.intAttr(elem, \"num\"),\n        space: xml.lengthAttr(elem, \"space\"),\n        separator: xml.boolAttr(elem, \"sep\"),\n        equalWidth: xml.boolAttr(elem, \"equalWidth\", true),\n        columns: xml.elements(elem, \"col\")\n            .map(e => <Column>{\n                width: xml.lengthAttr(e, \"w\"),\n                space: xml.lengthAttr(e, \"space\")\n            })\n    };\n}\n\nfunction parsePageNumber(elem: Element, xml: XmlParser): PageNumber {\n    return {\n        chapSep: xml.attr(elem, \"chapSep\"),\n        chapStyle: xml.attr(elem, \"chapStyle\"),\n        format: xml.attr(elem, \"fmt\"),\n        start: xml.intAttr(elem, \"start\")\n    };\n}\n\nfunction parseFooterHeaderReference(elem: Element, xml: XmlParser): FooterHeaderReference {\n    return {\n        id: xml.attr(elem, \"id\"),\n        type: xml.attr(elem, \"type\"),\n    }\n}","import { WordDocument } from './word-document';\nimport { DocumentParser } from './document-parser';\nimport { HtmlRenderer } from './html-renderer';\n\nexport interface Options {\n    inWrapper: boolean;\n    ignoreWidth: boolean;\n    ignoreHeight: boolean;\n    ignoreFonts: boolean;\n    ignorePageMargins: boolean;\n    breakPages: boolean;\n    debug: boolean;\n    experimental: boolean;\n    className: string;\n    trimXmlDeclaration: boolean;\n    renderHeaders: boolean;\n    renderFooters: boolean;\n    renderFootnotes: boolean;\n\trenderEndnotes: boolean;\n    ignoreLastRenderedPageBreak: boolean;\n\tuseBase64URL: boolean;\n\tuseMathMLPolyfill: boolean;\n\trenderChanges: boolean;\n}\n\nexport const defaultOptions: Options = {\n    ignoreHeight: false,\n    ignoreWidth: false,\n    ignoreFonts: false,\n    ignorePageMargins: false,\n    breakPages: true,\n    debug: false,\n    experimental: false,\n    className: \"docx\",\n    inWrapper: true,\n    trimXmlDeclaration: true,\n    ignoreLastRenderedPageBreak: true,\n    renderHeaders: true,\n    renderFooters: true,\n    renderFootnotes: true,\n\trenderEndnotes: true,\n\tuseBase64URL: false,\n\tuseMathMLPolyfill: false,\n\trenderChanges: false\n}\n\nexport function praseAsync(data: Blob | any, userOptions: Partial<Options> = null): Promise<any>  {\n    const ops = { ...defaultOptions, ...userOptions };\n    return WordDocument.load(data, new DocumentParser(ops), ops);\n}\n\nexport async function renderAsync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\n    const ops = { ...defaultOptions, ...userOptions };\n    const renderer = new HtmlRenderer(window.document);\n\tconst doc = await WordDocument.load(data, new DocumentParser(ops), ops)\n\n\trenderer.render(doc, bodyContainer, styleContainer, ops);\n\t\n    return doc;\n}","import { Part } from \"../common/part\";\nimport { FontDeclaration, parseFonts } from \"./fonts\";\n\nexport class FontTablePart extends Part {\n    fonts: FontDeclaration[];\n\n    parseXml(root: Element) {\n        this.fonts = parseFonts(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nconst embedFontTypeMap = {\n    embedRegular: 'regular',\n    embedBold: 'bold',\n    embedItalic: 'italic',\n    embedBoldItalic: 'boldItalic',\n}\n\nexport interface FontDeclaration {\n    name: string,\n    altName: string,\n    family: string,\n    embedFontRefs: EmbedFontRef[];\n}\n\nexport interface EmbedFontRef {\n    id: string;\n    key: string;\n    type: 'regular' | 'bold' | 'italic' | 'boldItalic';\n}\n\nexport function parseFonts(root: Element, xml: XmlParser): FontDeclaration[] {\n    return xml.elements(root).map(el => parseFont(el, xml));\n}\n\nexport function parseFont(elem: Element, xml: XmlParser): FontDeclaration {\n    let result = <FontDeclaration>{\n        name: xml.attr(elem, \"name\"),\n        embedFontRefs: []\n    };\n\n    for (let el of xml.elements(elem)) {\n        switch (el.localName) {\n            case \"family\":\n                result.family = xml.attr(el, \"val\");\n                break;\n\n            case \"altName\":\n                result.altName = xml.attr(el, \"val\");\n                break;\n\n            case \"embedRegular\":\n            case \"embedBold\":\n            case \"embedItalic\":\n            case \"embedBoldItalic\":\n                result.embedFontRefs.push(parseEmbedFontRef(el, xml));\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseEmbedFontRef(elem: Element, xml: XmlParser): EmbedFontRef {\n    return { \n        id: xml.attr(elem, \"id\"), \n        key: xml.attr(elem, \"fontKey\"),\n        type: embedFontTypeMap[elem.localName]\n    };\n}","import { DomType, OpenXmlElement } from \"../document/dom\";\n\nexport class WmlHeader implements OpenXmlElement {\n    type: DomType = DomType.Header;\n    children?: OpenXmlElement[] = [];\n    cssStyle?: Record<string, string> = {};\n    className?: string;\n    parent?: OpenXmlElement;\n}\n\nexport class WmlFooter implements OpenXmlElement {\n    type: DomType = DomType.Footer;\n    children?: OpenXmlElement[] = [];\n    cssStyle?: Record<string, string> = {};\n    className?: string;\n    parent?: OpenXmlElement;\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { OpenXmlElement } from \"../document/dom\";\nimport { WmlHeader, WmlFooter } from \"./elements\";\n\nexport abstract class BaseHeaderFooterPart<T extends OpenXmlElement = OpenXmlElement> extends Part {\n    rootElement: T;\n\n    private _documentParser: DocumentParser;\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n\n    parseXml(root: Element) {\n        this.rootElement = this.createRootElement();\n        this.rootElement.children = this._documentParser.parseBodyElements(root);\n    }\n\n    protected abstract createRootElement(): T;\n}\n\nexport class HeaderPart extends BaseHeaderFooterPart<WmlHeader> {\n    protected createRootElement(): WmlHeader {\n        return new WmlHeader();\n    }\n}\n\nexport class FooterPart extends BaseHeaderFooterPart<WmlFooter> {\n    protected createRootElement(): WmlFooter {\n        return new WmlFooter();\n    }\n}","import { WordDocument } from './word-document';\nimport {\n\tDomType, WmlTable, IDomNumbering,\n\tWmlHyperlink, IDomImage, OpenXmlElement, WmlTableColumn, WmlTableCell, WmlText, WmlSymbol, WmlBreak, WmlNoteReference\n} from './document/dom';\nimport { CommonProperties } from './document/common';\nimport { Options } from './docx-preview';\nimport { DocumentElement } from './document/document';\nimport { WmlParagraph } from './document/paragraph';\nimport { asArray, escapeClassName, isString, keyBy, mergeDeep } from './utils';\nimport { computePixelToPoint, updateTabStop } from './javascript';\nimport { FontTablePart } from './font-table/font-table';\nimport { FooterHeaderReference, SectionProperties } from './document/section';\nimport { WmlRun, RunProperties } from './document/run';\nimport { WmlBookmarkStart } from './document/bookmarks';\nimport { IDomStyle } from './document/style';\nimport { WmlBaseNote, WmlFootnote } from './notes/elements';\nimport { ThemePart } from './theme/theme-part';\nimport { BaseHeaderFooterPart } from './header-footer/parts';\nimport { Part } from './common/part';\nimport mathMLCSS from \"./mathml.scss\";\nimport { VmlElement } from './vml/vml';\nimport { WmlCheckboxFormField } from './document/checkbox';\n\nconst ns = {\n\tsvg: \"http://www.w3.org/2000/svg\",\n\tmathML: \"http://www.w3.org/1998/Math/MathML\"\n}\n\ninterface CellPos {\n\tcol: number;\n\trow: number;\n}\n\ntype CellVerticalMergeType = Record<number, HTMLTableCellElement>;\n\nexport class HtmlRenderer {\n\n\tclassName: string = \"docx\";\n\trootSelector: string;\n\tdocument: WordDocument;\n\toptions: Options;\n\tstyleMap: Record<string, IDomStyle> = {};\n\tcurrentPart: Part = null;\n\n\ttableVerticalMerges: CellVerticalMergeType[] = [];\n\tcurrentVerticalMerge: CellVerticalMergeType = null;\n\ttableCellPositions: CellPos[] = [];\n\tcurrentCellPosition: CellPos = null;\n\n\tfootnoteMap: Record<string, WmlFootnote> = {};\n\tendnoteMap: Record<string, WmlFootnote> = {};\n\tcurrentFootnoteIds: string[];\n\tcurrentEndnoteIds: string[] = [];\n\tusedHederFooterParts: any[] = [];\n\n\tdefaultTabSize: string;\n\tcurrentTabs: any[] = [];\n\ttabsTimeout: any = 0;\n\n\tconstructor(public htmlDocument: Document) {\n\t}\n\n\trender(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\n\t\tthis.document = document;\n\t\tthis.options = options;\n\t\tthis.className = options.className;\n\t\tthis.rootSelector = options.inWrapper ? `.${this.className}-wrapper` : ':root';\n\t\tthis.styleMap = null;\n\n\t\tstyleContainer = styleContainer || bodyContainer;\n\n\t\tremoveAllElements(styleContainer);\n\t\tremoveAllElements(bodyContainer);\n\n\t\tappendComment(styleContainer, \"docxjs library predefined styles\");\n\t\tstyleContainer.appendChild(this.renderDefaultStyle());\n\n\t\tif (!window.MathMLElement && options.useMathMLPolyfill) {\n\t\t\tappendComment(styleContainer, \"docxjs mathml polyfill styles\");\n\t\t\tstyleContainer.appendChild(createStyleElement(mathMLCSS));\n\t\t} \n\n\t\tif (document.themePart) {\n\t\t\tappendComment(styleContainer, \"docxjs document theme values\");\n\t\t\tthis.renderTheme(document.themePart, styleContainer);\n\t\t}\n\n\t\tif (document.stylesPart != null) {\n\t\t\tthis.styleMap = this.processStyles(document.stylesPart.styles);\n\n\t\t\tappendComment(styleContainer, \"docxjs document styles\");\n\t\t\tstyleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\n\t\t}\n\n\t\tif (document.numberingPart) {\n\t\t\tthis.prodessNumberings(document.numberingPart.domNumberings);\n\n\t\t\tappendComment(styleContainer, \"docxjs document numbering styles\");\n\t\t\tstyleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\n\t\t\t//styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\n\t\t}\n\n\t\tif (document.footnotesPart) {\n\t\t\tthis.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\n\t\t}\n\n\t\tif (document.endnotesPart) {\n\t\t\tthis.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\n\t\t}\n\n\t\tif (document.settingsPart) {\n\t\t\tthis.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\n\t\t}\n\n\t\tif (!options.ignoreFonts && document.fontTablePart)\n\t\t\tthis.renderFontTable(document.fontTablePart, styleContainer);\n\n\t\tvar sectionElements = this.renderSections(document.documentPart.body);\n\n\t\tif (this.options.inWrapper) {\n\t\t\tbodyContainer.appendChild(this.renderWrapper(sectionElements));\n\t\t} else {\n\t\t\tappendChildren(bodyContainer, sectionElements);\n\t\t}\n\n\t\tthis.refreshTabStops();\n\t}\n\n\trenderTheme(themePart: ThemePart, styleContainer: HTMLElement) {\n\t\tconst variables = {};\n\t\tconst fontScheme = themePart.theme?.fontScheme;\n\n\t\tif (fontScheme) {\n\t\t\tif (fontScheme.majorFont) {\n\t\t\t\tvariables['--docx-majorHAnsi-font'] = fontScheme.majorFont.latinTypeface;\n\t\t\t}\n\n\t\t\tif (fontScheme.minorFont) {\n\t\t\t\tvariables['--docx-minorHAnsi-font'] = fontScheme.minorFont.latinTypeface;\n\t\t\t}\n\t\t}\n\n\t\tconst colorScheme = themePart.theme?.colorScheme;\n\n\t\tif (colorScheme) {\n\t\t\tfor (let [k, v] of Object.entries(colorScheme.colors)) {\n\t\t\t\tvariables[`--docx-${k}-color`] = `#${v}`;\n\t\t\t}\n\t\t}\n\n\t\tconst cssText = this.styleToString(`.${this.className}`, variables);\n\t\tstyleContainer.appendChild(createStyleElement(cssText));\n\t}\n\n\trenderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement) {\n\t\tfor (let f of fontsPart.fonts) {\n\t\t\tfor (let ref of f.embedFontRefs) {\n\t\t\t\tthis.document.loadFont(ref.id, ref.key).then(fontData => {\n\t\t\t\t\tconst cssValues = {\n\t\t\t\t\t\t'font-family': f.name,\n\t\t\t\t\t\t'src': `url(${fontData})`\n\t\t\t\t\t};\n\n\t\t\t\t\tif (ref.type == \"bold\" || ref.type == \"boldItalic\") {\n\t\t\t\t\t\tcssValues['font-weight'] = 'bold';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ref.type == \"italic\" || ref.type == \"boldItalic\") {\n\t\t\t\t\t\tcssValues['font-style'] = 'italic';\n\t\t\t\t\t}\n\n\t\t\t\t\tappendComment(styleContainer, `docxjs ${f.name} font`);\n\t\t\t\t\tconst cssText = this.styleToString(\"@font-face\", cssValues);\n\t\t\t\t\tstyleContainer.appendChild(createStyleElement(cssText));\n\t\t\t\t\tthis.refreshTabStops();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessStyleName(className: string): string {\n\t\treturn className ? `${this.className}_${escapeClassName(className)}` : this.className;\n\t}\n\n\tprocessStyles(styles: IDomStyle[]) {\n\t\tconst stylesMap = keyBy(styles.filter(x => x.id != null), x => x.id);\n\n\t\tfor (const style of styles.filter(x => x.basedOn)) {\n\t\t\tvar baseStyle = stylesMap[style.basedOn];\n\n\t\t\tif (baseStyle) {\n\t\t\t\tstyle.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\n\t\t\t\tstyle.runProps = mergeDeep(style.runProps, baseStyle.runProps);\n\n\t\t\t\tfor (const baseValues of baseStyle.styles) {\n\t\t\t\t\tconst styleValues = style.styles.find(x => x.target == baseValues.target);\n\n\t\t\t\t\tif (styleValues) {\n\t\t\t\t\t\tthis.copyStyleProperties(baseValues.values, styleValues.values);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstyle.styles.push({ ...baseValues, values: { ...baseValues.values } });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.options.debug)\n\t\t\t\tconsole.warn(`Can't find base style ${style.basedOn}`);\n\t\t}\n\n\t\tfor (let style of styles) {\n\t\t\tstyle.cssName = this.processStyleName(style.id);\n\t\t}\n\n\t\treturn stylesMap;\n\t}\n\n\tprodessNumberings(numberings: IDomNumbering[]) {\n\t\tfor (let num of numberings.filter(n => n.pStyleName)) {\n\t\t\tconst style = this.findStyle(num.pStyleName);\n\n\t\t\tif (style?.paragraphProps?.numbering) {\n\t\t\t\tstyle.paragraphProps.numbering.level = num.level;\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessElement(element: OpenXmlElement) {\n\t\tif (element.children) {\n\t\t\tfor (var e of element.children) {\n\t\t\t\te.parent = element;\n\n\t\t\t\tif (e.type == DomType.Table) {\n\t\t\t\t\tthis.processTable(e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.processElement(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessTable(table: WmlTable) {\n\t\tfor (var r of table.children) {\n\t\t\tfor (var c of r.children) {\n\t\t\t\tc.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\n\t\t\t\t\t\"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\n\t\t\t\t\t\"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\n\t\t\t\t]);\n\n\t\t\t\tthis.processElement(c);\n\t\t\t}\n\t\t}\n\t}\n\n\tcopyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\n\t\tif (!input)\n\t\t\treturn output;\n\n\t\tif (output == null) output = {};\n\t\tif (attrs == null) attrs = Object.getOwnPropertyNames(input);\n\n\t\tfor (var key of attrs) {\n\t\t\tif (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\n\t\t\t\toutput[key] = input[key];\n\t\t}\n\n\t\treturn output;\n\t}\n\n\tcreateSection(className: string, props: SectionProperties) {\n\t\tvar elem = this.createElement(\"section\", { className });\n\n\t\tif (props) {\n\t\t\tif (props.pageMargins && !this.options.ignorePageMargins) {\n\t\t\t\telem.style.paddingLeft = props.pageMargins.left;\n\t\t\t\telem.style.paddingRight = props.pageMargins.right;\n\t\t\t\telem.style.paddingTop = props.pageMargins.top;\n\t\t\t\telem.style.paddingBottom = props.pageMargins.bottom;\n\t\t\t}\n\n\t\t\tif (props.pageSize) {\n\t\t\t\tif (!this.options.ignoreWidth)\n\t\t\t\t\telem.style.width = props.pageSize.width;\n\t\t\t\tif (!this.options.ignoreHeight)\n\t\t\t\t\telem.style.minHeight = props.pageSize.height;\n\t\t\t}\n\n\t\t\tif (props.columns && props.columns.numberOfColumns) {\n\t\t\t\telem.style.columnCount = `${props.columns.numberOfColumns}`;\n\t\t\t\telem.style.columnGap = props.columns.space;\n\n\t\t\t\tif (props.columns.separator) {\n\t\t\t\t\telem.style.columnRule = \"1px solid black\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn elem;\n\t}\n\n\trenderSections(document: DocumentElement): HTMLElement[] {\n\t\tconst result = [];\n\n\t\tthis.processElement(document);\n\t\tconst sections = this.splitBySection(document.children);\n\t\tlet prevProps = null;\n\n\t\tfor (let i = 0, l = sections.length; i < l; i++) {\n\t\t\tthis.currentFootnoteIds = [];\n\n\t\t\tconst section = sections[i];\n\t\t\tconst props = section.sectProps || document.props;\n\t\t\tconst sectionElement = this.createSection(this.className, props);\n\t\t\tthis.renderStyleValues(document.cssStyle, sectionElement);\n\n\t\t\tthis.options.renderHeaders && this.renderHeaderFooter(props.headerRefs, props,\n\t\t\t\tresult.length, prevProps != props, sectionElement);\n\n\t\t\tvar contentElement = this.createElement(\"article\");\n\t\t\tthis.renderElements(section.elements, contentElement);\n\t\t\tsectionElement.appendChild(contentElement);\n\n\t\t\tif (this.options.renderFootnotes) {\n\t\t\t\tthis.renderNotes(this.currentFootnoteIds, this.footnoteMap, sectionElement);\n\t\t\t}\n\n\t\t\tif (this.options.renderEndnotes && i == l - 1) {\n\t\t\t\tthis.renderNotes(this.currentEndnoteIds, this.endnoteMap, sectionElement);\n\t\t\t}\n\n\t\t\tthis.options.renderFooters && this.renderHeaderFooter(props.footerRefs, props,\n\t\t\t\tresult.length, prevProps != props, sectionElement);\n\n\t\t\tresult.push(sectionElement);\n\t\t\tprevProps = props;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderHeaderFooter(refs: FooterHeaderReference[], props: SectionProperties, page: number, firstOfSection: boolean, into: HTMLElement) {\n\t\tif (!refs) return;\n\n\t\tvar ref = (props.titlePage && firstOfSection ? refs.find(x => x.type == \"first\") : null)\n\t\t\t?? (page % 2 == 1 ? refs.find(x => x.type == \"even\") : null)\n\t\t\t?? refs.find(x => x.type == \"default\");\n\n\t\tvar part = ref && this.document.findPartByRelId(ref.id, this.document.documentPart) as BaseHeaderFooterPart;\n\n\t\tif (part) {\n\t\t\tthis.currentPart = part;\n\t\t\tif (!this.usedHederFooterParts.includes(part.path)) {\n\t\t\t\tthis.processElement(part.rootElement);\n\t\t\t\tthis.usedHederFooterParts.push(part.path);\n\t\t\t}\n\t\t\tthis.renderElements([part.rootElement], into);\n\t\t\tthis.currentPart = null;\n\t\t}\n\t}\n\n\tisPageBreakElement(elem: OpenXmlElement): boolean {\n\t\tif (elem.type != DomType.Break)\n\t\t\treturn false;\n\n\t\tif ((elem as WmlBreak).break == \"lastRenderedPageBreak\")\n\t\t\treturn !this.options.ignoreLastRenderedPageBreak;\n\n\t\treturn (elem as WmlBreak).break == \"page\";\n\t}\n\n\tsplitBySection(elements: OpenXmlElement[]): { sectProps: SectionProperties, elements: OpenXmlElement[] }[] {\n\t\tvar current = { sectProps: null, elements: [] };\n\t\tvar result = [current];\n\n\t\tfor (let elem of elements) {\n\t\t\tif (elem.type == DomType.Paragraph) {\n\t\t\t\tconst s = this.findStyle((elem as WmlParagraph).styleName);\n\n\t\t\t\tif (s?.paragraphProps?.pageBreakBefore) {\n\t\t\t\t\tcurrent.sectProps = sectProps;\n\t\t\t\t\tcurrent = { sectProps: null, elements: [] };\n\t\t\t\t\tresult.push(current);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrent.elements.push(elem);\n\n\t\t\tif (elem.type == DomType.Paragraph) {\n\t\t\t\tconst p = elem as WmlParagraph;\n\n\t\t\t\tvar sectProps = p.sectionProps;\n\t\t\t\tvar pBreakIndex = -1;\n\t\t\t\tvar rBreakIndex = -1;\n\n\t\t\t\tif (this.options.breakPages && p.children) {\n\t\t\t\t\tpBreakIndex = p.children.findIndex(r => {\n\t\t\t\t\t\trBreakIndex = r.children?.findIndex(this.isPageBreakElement.bind(this)) ?? -1;\n\t\t\t\t\t\treturn rBreakIndex != -1;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (sectProps || pBreakIndex != -1) {\n\t\t\t\t\tcurrent.sectProps = sectProps;\n\t\t\t\t\tcurrent = { sectProps: null, elements: [] };\n\t\t\t\t\tresult.push(current);\n\t\t\t\t}\n\n\t\t\t\tif (pBreakIndex != -1) {\n\t\t\t\t\tlet breakRun = p.children[pBreakIndex];\n\t\t\t\t\tlet splitRun = rBreakIndex < breakRun.children.length - 1;\n\n\t\t\t\t\tif (pBreakIndex < p.children.length - 1 || splitRun) {\n\t\t\t\t\t\tvar children = elem.children;\n\t\t\t\t\t\tvar newParagraph = { ...elem, children: children.slice(pBreakIndex) };\n\t\t\t\t\t\telem.children = children.slice(0, pBreakIndex);\n\t\t\t\t\t\tcurrent.elements.push(newParagraph);\n\n\t\t\t\t\t\tif (splitRun) {\n\t\t\t\t\t\t\tlet runChildren = breakRun.children;\n\t\t\t\t\t\t\tlet newRun = { ...breakRun, children: runChildren.slice(0, rBreakIndex) };\n\t\t\t\t\t\t\telem.children.push(newRun);\n\t\t\t\t\t\t\tbreakRun.children = runChildren.slice(rBreakIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet currentSectProps = null;\n\n\t\tfor (let i = result.length - 1; i >= 0; i--) {\n\t\t\tif (result[i].sectProps == null) {\n\t\t\t\tresult[i].sectProps = currentSectProps;\n\t\t\t} else {\n\t\t\t\tcurrentSectProps = result[i].sectProps\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderWrapper(children: HTMLElement[]) {\n\t\treturn this.createElement(\"div\", { className: `${this.className}-wrapper` }, children);\n\t}\n\n\trenderDefaultStyle() {\n\t\tvar c = this.className;\n\t\tvar styleText = `\n.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \n.${c}-wrapper>section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\n.${c} { color: black; }\nsection.${c} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }\nsection.${c}>article { margin-bottom: auto; }\n.${c} table { border-collapse: collapse; }\n.${c} table td, .${c} table th { vertical-align: top; }\n.${c} p { margin: 0pt; min-height: 1em; }\n.${c} span { white-space: pre-wrap; overflow-wrap: break-word; }\n.${c} a { color: inherit; text-decoration: inherit; }\n`;\n\n\t\treturn createStyleElement(styleText);\n\t}\n\n\t// renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\n\t//     let css = \"\";\n\t//     const numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\n\t//     const bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\n\t//     const topCounters = [];\n\n\t//     for(let num of numberingPart.numberings) {\n\t//         const absNum = numberingMap[num.abstractId];\n\n\t//         for(let lvl of absNum.levels) {\n\t//             const className = this.numberingClass(num.id, lvl.level);\n\t//             let listStyleType = \"none\";\n\n\t//             if(lvl.text && lvl.format == 'decimal') {\n\t//                 const counter = this.numberingCounter(num.id, lvl.level);\n\n\t//                 if (lvl.level > 0) {\n\t//                     css += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\n\t//                         \"counter-reset\": counter\n\t//                     });\n\t//                 } else {\n\t//                     topCounters.push(counter);\n\t//                 }\n\n\t//                 css += this.styleToString(`p.${className}:before`, {\n\t//                     \"content\": this.levelTextToContent(lvl.text, num.id),\n\t//                     \"counter-increment\": counter\n\t//                 });\n\t//             } else if(lvl.bulletPictureId) {\n\t//                 let pict = bulletMap[lvl.bulletPictureId];\n\t//                 let variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\n\n\t//                 css += this.styleToString(`p.${className}:before`, {\n\t//                     \"content\": \"' '\",\n\t//                     \"display\": \"inline-block\",\n\t//                     \"background\": `var(${variable})`\n\t//                 }, pict.style);\n\n\t//                 this.document.loadNumberingImage(pict.referenceId).then(data => {\n\t//                     var text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\n\t//                     container.appendChild(createStyleElement(text));\n\t//                 });\n\t//             } else {\n\t//                 listStyleType = this.numFormatToCssValue(lvl.format);\n\t//             }\n\n\t//             css += this.styleToString(`p.${className}`, {\n\t//                 \"display\": \"list-item\",\n\t//                 \"list-style-position\": \"inside\",\n\t//                 \"list-style-type\": listStyleType,\n\t//                 //TODO\n\t//                 //...num.style\n\t//             });\n\t//         }\n\t//     }\n\n\t//     if (topCounters.length > 0) {\n\t//         css += this.styleToString(`.${this.className}-wrapper`, {\n\t//             \"counter-reset\": topCounters.join(\" \")\n\t//         });\n\t//     }\n\n\t//     return createStyleElement(css);\n\t// }\n\n\trenderNumbering(numberings: IDomNumbering[], styleContainer: HTMLElement) {\n\t\tvar styleText = \"\";\n\t\tvar rootCounters = [];\n\n\t\tfor (var num of numberings) {\n\t\t\tvar selector = `p.${this.numberingClass(num.id, num.level)}`;\n\t\t\tvar listStyleType = \"none\";\n\n\t\t\tif (num.bullet) {\n\t\t\t\tlet valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\n\n\t\t\t\tstyleText += this.styleToString(`${selector}:before`, {\n\t\t\t\t\t\"content\": \"' '\",\n\t\t\t\t\t\"display\": \"inline-block\",\n\t\t\t\t\t\"background\": `var(${valiable})`\n\t\t\t\t}, num.bullet.style);\n\n\t\t\t\tthis.document.loadNumberingImage(num.bullet.src).then(data => {\n\t\t\t\t\tvar text = `${this.rootSelector} { ${valiable}: url(${data}) }`;\n\t\t\t\t\tstyleContainer.appendChild(createStyleElement(text));\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (num.levelText) {\n\t\t\t\tlet counter = this.numberingCounter(num.id, num.level);\n\n\t\t\t\tif (num.level > 0) {\n\t\t\t\t\tstyleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\n\t\t\t\t\t\t\"counter-reset\": counter\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trootCounters.push(counter);\n\t\t\t\t}\n\n\t\t\t\tstyleText += this.styleToString(`${selector}:before`, {\n\t\t\t\t\t\"content\": this.levelTextToContent(num.levelText, num.suff, num.id, this.numFormatToCssValue(num.format)),\n\t\t\t\t\t\"counter-increment\": counter,\n\t\t\t\t\t...num.rStyle,\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlistStyleType = this.numFormatToCssValue(num.format);\n\t\t\t}\n\n\t\t\tstyleText += this.styleToString(selector, {\n\t\t\t\t\"display\": \"list-item\",\n\t\t\t\t\"list-style-position\": \"inside\",\n\t\t\t\t\"list-style-type\": listStyleType,\n\t\t\t\t...num.pStyle\n\t\t\t});\n\t\t}\n\n\t\tif (rootCounters.length > 0) {\n\t\t\tstyleText += this.styleToString(this.rootSelector, {\n\t\t\t\t\"counter-reset\": rootCounters.join(\" \")\n\t\t\t});\n\t\t}\n\n\t\treturn createStyleElement(styleText);\n\t}\n\n\trenderStyles(styles: IDomStyle[]): HTMLElement {\n\t\tvar styleText = \"\";\n\t\tconst stylesMap = this.styleMap;\n\t\tconst defautStyles = keyBy(styles.filter(s => s.isDefault), s => s.target);\n\n\t\tfor (const style of styles) {\n\t\t\tvar subStyles = style.styles;\n\n\t\t\tif (style.linked) {\n\t\t\t\tvar linkedStyle = style.linked && stylesMap[style.linked];\n\n\t\t\t\tif (linkedStyle)\n\t\t\t\t\tsubStyles = subStyles.concat(linkedStyle.styles);\n\t\t\t\telse if (this.options.debug)\n\t\t\t\t\tconsole.warn(`Can't find linked style ${style.linked}`);\n\t\t\t}\n\n\t\t\tfor (const subStyle of subStyles) {\n\t\t\t\t//TODO temporary disable modificators until test it well\n\t\t\t\tvar selector = `${style.target ?? ''}.${style.cssName}`; //${subStyle.mod ?? ''} \n\n\t\t\t\tif (style.target != subStyle.target)\n\t\t\t\t\tselector += ` ${subStyle.target}`;\n\n\t\t\t\tif (defautStyles[style.target] == style)\n\t\t\t\t\tselector = `.${this.className} ${style.target}, ` + selector;\n\n\t\t\t\tstyleText += this.styleToString(selector, subStyle.values);\n\t\t\t}\n\t\t}\n\n\t\treturn createStyleElement(styleText);\n\t}\n\n\trenderNotes(noteIds: string[], notesMap: Record<string, WmlBaseNote>, into: HTMLElement) {\n\t\tvar notes = noteIds.map(id => notesMap[id]).filter(x => x);\n\n\t\tif (notes.length > 0) {\n\t\t\tvar result = this.createElement(\"ol\", null, this.renderElements(notes));\n\t\t\tinto.appendChild(result);\n\t\t}\n\t}\n\n\trenderElement(elem: OpenXmlElement): Node | Node[] {\n\t\tswitch (elem.type) {\n\t\t\tcase DomType.Paragraph:\n\t\t\t\treturn this.renderParagraph(elem as WmlParagraph);\n\n\t\t\tcase DomType.BookmarkStart:\n\t\t\t\treturn this.renderBookmarkStart(elem as WmlBookmarkStart);\n\n\t\t\tcase DomType.BookmarkEnd:\n\t\t\t\treturn null; //ignore bookmark end\n\n\t\t\tcase DomType.Run:\n\t\t\t\treturn this.renderRun(elem as WmlRun);\n\n\t\t\tcase DomType.Table:\n\t\t\t\treturn this.renderTable(elem);\n\n\t\t\tcase DomType.Row:\n\t\t\t\treturn this.renderTableRow(elem);\n\n\t\t\tcase DomType.Cell:\n\t\t\t\treturn this.renderTableCell(elem);\n\n\t\t\tcase DomType.Hyperlink:\n\t\t\t\treturn this.renderHyperlink(elem);\n\n\t\t\tcase DomType.Drawing:\n\t\t\t\treturn this.renderDrawing(elem);\n\n\t\t\tcase DomType.Image:\n\t\t\t\treturn this.renderImage(elem as IDomImage);\n\n\t\t\tcase DomType.Text:\n\t\t\t\treturn this.renderText(elem as WmlText);\n\n\t\t\tcase DomType.Text:\n\t\t\t\treturn this.renderText(elem as WmlText);\n\n\t\t\tcase DomType.DeletedText:\n\t\t\t\treturn this.renderDeletedText(elem as WmlText);\n\t\n\t\t\tcase DomType.Tab:\n\t\t\t\treturn this.renderTab(elem);\n\n\t\t\tcase DomType.Symbol:\n\t\t\t\treturn this.renderSymbol(elem as WmlSymbol);\n\n\t\t\tcase DomType.Break:\n\t\t\t\treturn this.renderBreak(elem as WmlBreak);\n\n\t\t\tcase DomType.Footer:\n\t\t\t\treturn this.renderContainer(elem, \"footer\");\n\n\t\t\tcase DomType.Header:\n\t\t\t\treturn this.renderContainer(elem, \"header\");\n\n\t\t\tcase DomType.Footnote:\n\t\t\tcase DomType.Endnote:\n\t\t\t\treturn this.renderContainer(elem, \"li\");\n\n\t\t\tcase DomType.FootnoteReference:\n\t\t\t\treturn this.renderFootnoteReference(elem as WmlNoteReference);\n\n\t\t\tcase DomType.EndnoteReference:\n\t\t\t\treturn this.renderEndnoteReference(elem as WmlNoteReference);\n\n\t\t\tcase DomType.NoBreakHyphen:\n\t\t\t\treturn this.createElement(\"wbr\");\n\n\t\t\tcase DomType.VmlPicture:\n\t\t\t\treturn this.renderVmlPicture(elem);\n\n\t\t\tcase DomType.VmlElement:\n\t\t\t\treturn this.renderVmlElement(elem as VmlElement);\n\t\n\t\t\tcase DomType.MmlMath:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"math\", { xmlns: ns.mathML });\n\t\n\t\t\tcase DomType.MmlMathParagraph:\n\t\t\t\treturn this.renderContainer(elem, \"span\");\n\n\t\t\tcase DomType.MmlFraction:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mfrac\");\n\n\t\t\tcase DomType.MmlNumerator:\n\t\t\tcase DomType.MmlDenominator:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mrow\");\n\n\t\t\tcase DomType.MmlRadical:\n\t\t\t\treturn this.renderMmlRadical(elem);\n\n\t\t\tcase DomType.MmlDegree:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mn\");\n\n\t\t\tcase DomType.MmlSuperscript:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"msup\");\n\n\t\t\tcase DomType.MmlSubscript:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"msub\");\n\t\n\t\t\tcase DomType.MmlBase:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mrow\");\n\n\t\t\tcase DomType.MmlSuperArgument:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mn\");\n\n\t\t\tcase DomType.MmlSubArgument:\n\t\t\t\treturn this.renderContainerNS(elem, ns.mathML, \"mn\");\n\n\t\t\tcase DomType.MmlDelimiter:\n\t\t\t\treturn this.renderMmlDelimiter(elem);\n\n\t\t\tcase DomType.MmlRun:\n\t\t\t\treturn this.renderMmlRun(elem);\n\n\t\t\tcase DomType.MmlNary:\n\t\t\t\treturn this.renderMmlNary(elem);\n\n\t\t\tcase DomType.Inserted:\n\t\t\t\treturn this.renderInserted(elem);\n\n\t\t\tcase DomType.Deleted:\n\t\t\t\treturn this.renderDeleted(elem);\n\n\t\t\tcase DomType.CheckboxFormField:\n\t\t\t\treturn this.renderCheckbox(elem as WmlCheckboxFormField);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\trenderChildren(elem: OpenXmlElement, into?: Element): Node[] {\n\t\treturn this.renderElements(elem.children, into);\n\t}\n\n\trenderElements(elems: OpenXmlElement[], into?: Element): Node[] {\n\t\tif (elems == null)\n\t\t\treturn null;\n\n\t\tvar result = elems.flatMap(e => this.renderElement(e)).filter(e => e != null);\n\n\t\tif (into)\n\t\t\tappendChildren(into, result);\n\n\t\treturn result;\n\t}\n\n\trenderContainer(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap, props?: Record<string, any>) {\n\t\treturn this.createElement(tagName, props, this.renderChildren(elem));\n\t}\n\n\trenderContainerNS(elem: OpenXmlElement, ns: string, tagName: string, props?: Record<string, any>) {\n\t\treturn createElementNS(ns, tagName, props, this.renderChildren(elem));\n\t}\n\n\trenderParagraph(elem: WmlParagraph) {\n\t\tvar result = this.createElement(\"p\");\n\n\t\tconst style = this.findStyle(elem.styleName);\n\t\telem.tabs ??= style?.paragraphProps?.tabs;  //TODO\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\t\tthis.renderCommonProperties(result.style, elem);\n\n\t\tconst numbering = elem.numbering ?? style?.paragraphProps?.numbering;\n\n\t\tif (numbering) {\n\t\t\tresult.classList.add(this.numberingClass(numbering.id, numbering.level));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderRunProperties(style: any, props: RunProperties) {\n\t\tthis.renderCommonProperties(style, props);\n\t}\n\n\trenderCommonProperties(style: any, props: CommonProperties) {\n\t\tif (props == null)\n\t\t\treturn;\n\n\t\tif (props.color) {\n\t\t\tstyle[\"color\"] = props.color;\n\t\t}\n\n\t\tif (props.fontSize) {\n\t\t\tstyle[\"font-size\"] = props.fontSize;\n\t\t}\n\t}\n\n\trenderHyperlink(elem: WmlHyperlink) {\n\t\tvar result = this.createElement(\"a\");\n\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tif (elem.href) {\n\t\t\tresult.href = elem.href;\n\t\t} else if(elem.id) {\n\t\t\tconst rel = this.document.documentPart.rels\n\t\t\t\t.find(it => it.id == elem.id && it.targetMode === \"External\");\n\t\t\tresult.href = rel?.target;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderDrawing(elem: OpenXmlElement) {\n\t\tvar result = this.createElement(\"div\");\n\n\t\tresult.style.display = \"inline-block\";\n\t\tresult.style.position = \"relative\";\n\t\tresult.style.textIndent = \"0px\";\n\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\treturn result;\n\t}\n\n\trenderImage(elem: IDomImage) {\n\t\tlet result = this.createElement(\"img\");\n\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tif (this.document) {\n\t\t\tthis.document.loadDocumentImage(elem.src, this.currentPart).then(x => {\n\t\t\t\tresult.src = x;\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderText(elem: WmlText) {\n\t\treturn this.htmlDocument.createTextNode(elem.text);\n\t}\n\n\trenderDeletedText(elem: WmlText) {\n\t\treturn this.options.renderEndnotes ? this.htmlDocument.createTextNode(elem.text) : null;\n\t}\n\n\trenderBreak(elem: WmlBreak) {\n\t\tif (elem.break == \"textWrapping\") {\n\t\t\treturn this.createElement(\"br\");\n\t\t}\n\n\t\treturn null;\n\t}\n\n\trenderInserted(elem: OpenXmlElement): Node | Node[] {\n\t\tif (this.options.renderChanges)\n\t\t\treturn this.renderContainer(elem, \"ins\");\n\n\t\treturn this.renderChildren(elem);\n\t}\n\n\trenderDeleted(elem: OpenXmlElement): Node {\n\t\tif (this.options.renderChanges)\n\t\t\treturn this.renderContainer(elem, \"del\");\n\n\t\treturn null;\n\t}\n\n\trenderSymbol(elem: WmlSymbol) {\n\t\tvar span = this.createElement(\"span\");\n\t\tspan.style.fontFamily = elem.font;\n\t\tspan.innerHTML = `&#x${elem.char};`\n\t\treturn span;\n\t}\n\n\trenderFootnoteReference(elem: WmlNoteReference) {\n\t\tvar result = this.createElement(\"sup\");\n\t\tthis.currentFootnoteIds.push(elem.id);\n\t\tresult.textContent = `${this.currentFootnoteIds.length}`;\n\t\treturn result;\n\t}\n\n\trenderEndnoteReference(elem: WmlNoteReference) {\n\t\tvar result = this.createElement(\"sup\");\n\t\tthis.currentEndnoteIds.push(elem.id);\n\t\tresult.textContent = `${this.currentEndnoteIds.length}`;\n\t\treturn result;\n\t}\n\n\trenderTab(elem: OpenXmlElement) {\n\t\tvar tabSpan = this.createElement(\"span\");\n\n\t\ttabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\n\n\t\tif (this.options.experimental) {\n\t\t\ttabSpan.className = this.tabStopClass();\n\t\t\tvar stops = findParent<WmlParagraph>(elem, DomType.Paragraph)?.tabs;\n\t\t\tthis.currentTabs.push({ stops, span: tabSpan });\n\t\t}\n\n\t\treturn tabSpan;\n\t}\n\n\trenderBookmarkStart(elem: WmlBookmarkStart): HTMLElement {\n\t\tvar result = this.createElement(\"span\");\n\t\tresult.id = elem.name;\n\t\treturn result;\n\t}\n\n\trenderRun(elem: WmlRun) {\n\t\tif (elem.fieldRun)\n\t\t\treturn null;\n\n\t\tconst result = this.createElement(\"span\");\n\n\t\tif (elem.id)\n\t\t\tresult.id = elem.id;\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tif (elem.verticalAlign) {\n\t\t\tconst wrapper = this.createElement(elem.verticalAlign as any);\n\t\t\tthis.renderChildren(elem, wrapper);\n\t\t\tresult.appendChild(wrapper);\n\t\t}\n\t\telse {\n\t\t\tthis.renderChildren(elem, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderCheckbox({ name, checked }: WmlCheckboxFormField) {\n\t\treturn this.createElement(\"input\", {\n\t\t\ttype: \"checkbox\",\n\t\t\tname,\n\t\t\tid: name,\n\t\t\t...(checked && {\n\t\t\t\tchecked: \"checked\",\n\t\t\t})\n\t\t});\n\t}\n\n\trenderTable(elem: WmlTable) {\n\t\tlet result = this.createElement(\"table\");\n\n\t\tthis.tableCellPositions.push(this.currentCellPosition);\n\t\tthis.tableVerticalMerges.push(this.currentVerticalMerge);\n\t\tthis.currentVerticalMerge = {};\n\t\tthis.currentCellPosition = { col: 0, row: 0 };\n\n\t\tif (elem.columns)\n\t\t\tresult.appendChild(this.renderTableColumns(elem.columns));\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tthis.currentVerticalMerge = this.tableVerticalMerges.pop();\n\t\tthis.currentCellPosition = this.tableCellPositions.pop();\n\n\t\treturn result;\n\t}\n\n\trenderTableColumns(columns: WmlTableColumn[]) {\n\t\tlet result = this.createElement(\"colgroup\");\n\n\t\tfor (let col of columns) {\n\t\t\tlet colElem = this.createElement(\"col\");\n\n\t\t\tif (col.width)\n\t\t\t\tcolElem.style.width = col.width;\n\n\t\t\tresult.appendChild(colElem);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderTableRow(elem: OpenXmlElement) {\n\t\tlet result = this.createElement(\"tr\");\n\n\t\tthis.currentCellPosition.col = 0;\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tthis.currentCellPosition.row++;\n\n\t\treturn result;\n\t}\n\n\trenderTableCell(elem: WmlTableCell) {\n\t\tlet result = this.createElement(\"td\");\n\n\t\tconst key = this.currentCellPosition.col;\n\n\t\tif (elem.verticalMerge) {\n\t\t\tif (elem.verticalMerge == \"restart\") {\n\t\t\t\tthis.currentVerticalMerge[key] = result;\n\t\t\t\tresult.rowSpan = 1;\n\t\t\t} else if (this.currentVerticalMerge[key]) {\n\t\t\t\tthis.currentVerticalMerge[key].rowSpan += 1;\n\t\t\t\tresult.style.display = \"none\";\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentVerticalMerge[key] = null;\n\t\t}\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tif (elem.span)\n\t\t\tresult.colSpan = elem.span;\n\n\t\tthis.currentCellPosition.col += result.colSpan;\n\n\t\treturn result;\n\t}\n\n\trenderVmlPicture(elem: OpenXmlElement) {\n\t\tvar result = createElement(\"div\");\n\t\tthis.renderChildren(elem, result);\n\t\treturn result;\n\t}\n\n\trenderVmlElement(elem: VmlElement): SVGElement {\n\t\tvar container = createSvgElement(\"svg\");\n\n\t\tcontainer.setAttribute(\"style\", elem.cssStyleText);\n\n\t\tconst result = createSvgElement(elem.tagName as any);\n\t\tObject.entries(elem.attrs).forEach(([k, v]) => result.setAttribute(k, v));\n\n\t\tif (elem.imageHref?.id) {\n\t\t\tthis.document?.loadDocumentImage(elem.imageHref.id, this.currentPart)\n\t\t\t\t.then(x => result.setAttribute(\"href\", x));\n\t\t}\n\t\t\n\t\tcontainer.appendChild(result);\n\n\t\trequestAnimationFrame(() => {\n\t\t\tconst bb = (container.firstElementChild as any).getBBox();\n\n\t\t\tcontainer.setAttribute(\"width\", `${Math.ceil(bb.x +  bb.width)}`);\n\t\t\tcontainer.setAttribute(\"height\", `${Math.ceil(bb.y + bb.height)}`);\n\t\t});\n\n\t\treturn container;\n\t}\n\n\trenderMmlRadical(elem: OpenXmlElement): HTMLElement {\n\t\tconst base = elem.children.find(el => el.type == DomType.MmlBase);\n\n\t\tif (elem.props?.hideDegree) {\n\t\t\treturn createElementNS(ns.mathML, \"msqrt\", null, this.renderElements([base]));\n\t\t}\n\n\t\tconst degree = elem.children.find(el => el.type == DomType.MmlDegree);\n\t\treturn createElementNS(ns.mathML, \"mroot\", null, this.renderElements([base, degree]));\n\t}\n\n\trenderMmlDelimiter(elem: OpenXmlElement): HTMLElement {\t\t\n\t\tconst children = [];\n\n\t\tchildren.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.beginChar ?? '(']));\n\t\tchildren.push(...this.renderElements(elem.children));\n\t\tchildren.push(createElementNS(ns.mathML, \"mo\", null, [elem.props.endChar ?? ')']));\n\n\t\treturn createElementNS(ns.mathML, \"mrow\", null, children);\n\t}\n\n\trenderMmlNary(elem: OpenXmlElement): HTMLElement {\t\t\n\t\tconst children = [];\n\t\tconst grouped = keyBy(elem.children, x => x.type);\n\n\t\tconst sup = grouped[DomType.MmlSuperArgument];\n\t\tconst sub = grouped[DomType.MmlSubArgument];\n\t\tconst supElem = sup ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sup))) : null;\n\t\tconst subElem = sub ? createElementNS(ns.mathML, \"mo\", null, asArray(this.renderElement(sub))) : null;\n\n\t\tif (elem.props?.char) {\n\t\t\tconst charElem = createElementNS(ns.mathML, \"mo\", null, [elem.props.char]);\n\n\t\t\tif (supElem || subElem) {\n\t\t\t\tchildren.push(createElementNS(ns.mathML, \"munderover\", null, [charElem, subElem, supElem]));\n\t\t\t} else if(supElem) {\n\t\t\t\tchildren.push(createElementNS(ns.mathML, \"mover\", null, [charElem, supElem]));\n\t\t\t} else if(subElem) {\n\t\t\t\tchildren.push(createElementNS(ns.mathML, \"munder\", null, [charElem, subElem]));\n\t\t\t} else {\n\t\t\t\tchildren.push(charElem);\n\t\t\t}\n\t\t}\n\n\t\tchildren.push(...this.renderElements(grouped[DomType.MmlBase].children));\n\n\t\treturn createElementNS(ns.mathML, \"mrow\", null, children);\n\t}\n\n\trenderMmlRun(elem: OpenXmlElement) {\n\t\tconst result = createElementNS(ns.mathML, \"ms\");\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\t\tthis.renderChildren(elem, result);\n\n\t\treturn result;\n\t}\n\n\trenderStyleValues(style: Record<string, string>, ouput: HTMLElement) {\n\t\tObject.assign(ouput.style, style);\n\t}\n\n\trenderClass(input: OpenXmlElement, ouput: HTMLElement) {\n\t\tif (input.className)\n\t\t\touput.className = input.className;\n\n\t\tif (input.styleName)\n\t\t\touput.classList.add(this.processStyleName(input.styleName));\n\t}\n\n\tfindStyle(styleName: string) {\n\t\treturn styleName && this.styleMap?.[styleName];\n\t}\n\n\tnumberingClass(id: string, lvl: number) {\n\t\treturn `${this.className}-num-${id}-${lvl}`;\n\t}\n\n\ttabStopClass() {\n\t\treturn `${this.className}-tab-stop`;\n\t}\n\n\tstyleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\n\t\tlet result = `${selectors} {\\r\\n`;\n\n\t\tfor (const key in values) {\n\t\t\tresult += `  ${key}: ${values[key]};\\r\\n`;\n\t\t}\n\n\t\tif (cssText)\n\t\t\tresult += cssText;\n\n\t\treturn result + \"}\\r\\n\";\n\t}\n\n\tnumberingCounter(id: string, lvl: number) {\n\t\treturn `${this.className}-num-${id}-${lvl}`;\n\t}\n\n\tlevelTextToContent(text: string, suff: string, id: string, numformat: string) {\n\t\tconst suffMap = {\n\t\t\t\"tab\": \"\\\\9\",\n\t\t\t\"space\": \"\\\\a0\",\n\t\t};\n\n\t\tvar result = text.replace(/%\\d*/g, s => {\n\t\t\tlet lvl = parseInt(s.substring(1), 10) - 1;\n\t\t\treturn `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\n\t\t});\n\n\t\treturn `\"${result}${suffMap[suff] ?? \"\"}\"`;\n\t}\n\n\tnumFormatToCssValue(format: string) {\n\t\tvar mapping = {\n\t\t\t\"none\": \"none\",\n\t\t\t\"bullet\": \"disc\",\n\t\t\t\"decimal\": \"decimal\",\n\t\t\t\"lowerLetter\": \"lower-alpha\",\n\t\t\t\"upperLetter\": \"upper-alpha\",\n\t\t\t\"lowerRoman\": \"lower-roman\",\n\t\t\t\"upperRoman\": \"upper-roman\",\n\t\t};\n\n\t\treturn mapping[format] || format;\n\t}\n\n\trefreshTabStops() {\n\t\tif (!this.options.experimental)\n\t\t\treturn;\n\n\t\tclearTimeout(this.tabsTimeout);\n\n\t\tthis.tabsTimeout = setTimeout(() => {\n\t\t\tconst pixelToPoint = computePixelToPoint();\n\n\t\t\tfor (let tab of this.currentTabs) {\n\t\t\t\tupdateTabStop(tab.span, tab.stops, this.defaultTabSize, pixelToPoint);\n\t\t\t}\n\t\t}, 500);\n\t}\n\n\tcreateElement = createElement;\n}\n\ntype ChildType = Node | string;\n\nfunction createElement<T extends keyof HTMLElementTagNameMap>(\n\ttagName: T,\n\tprops?: Partial<Record<keyof HTMLElementTagNameMap[T], any>>,\n\tchildren?: ChildType[]\n): HTMLElementTagNameMap[T] {\n\treturn createElementNS(undefined, tagName, props, children);\n}\n\nfunction createSvgElement<T extends keyof SVGElementTagNameMap>(\n\ttagName: T,\n\tprops?: Partial<Record<keyof SVGElementTagNameMap[T], any>>,\n\tchildren?: ChildType[]\n): SVGElementTagNameMap[T] {\n\treturn createElementNS(ns.svg, tagName, props, children);\n}\n\nfunction createElementNS(ns: string, tagName: string, props?: Partial<Record<any, any>>, children?: ChildType[]): any {\n\tvar result = ns ? document.createElementNS(ns, tagName) : document.createElement(tagName);\n\tObject.assign(result, props);\n\tchildren && appendChildren(result, children);\n\treturn result;\n}\n\nfunction removeAllElements(elem: HTMLElement) {\n\telem.innerHTML = '';\n}\n\nfunction appendChildren(elem: Element, children: (Node | string)[]) {\n\tchildren.forEach(c => elem.appendChild(isString(c) ? document.createTextNode(c) : c));\n}\n\nfunction createStyleElement(cssText: string) {\n\treturn createElement(\"style\", { innerHTML: cssText });\n}\n\nfunction appendComment(elem: HTMLElement, comment: string) {\n\telem.appendChild(document.createComment(comment));\n}\n\nfunction findParent<T extends OpenXmlElement>(elem: OpenXmlElement, type: DomType): T {\n\tvar parent = elem.parent;\n\n\twhile (parent != null && parent.type != type)\n\t\tparent = parent.parent;\n\n\treturn <T>parent;\n}\n","import { Length } from \"./document/common\";\nimport { ParagraphTab } from \"./document/paragraph\";\n\ninterface TabStop {\n\tpos: number;\n\tleader: string;\n\tstyle: string;\n}\n\nconst defaultTab: TabStop = { pos: 0, leader: \"none\", style: \"left\" };\nconst maxTabs = 50;\n\nexport function computePixelToPoint(container: HTMLElement = document.body) {\n\tconst temp = document.createElement(\"div\");\n\ttemp.style.width = '100pt';\n\t\n\tcontainer.appendChild(temp);\n\tconst result = 100 / temp.offsetWidth;\n\tcontainer.removeChild(temp);\n\n\treturn result\n}\n\nexport function updateTabStop(elem: HTMLElement, tabs: ParagraphTab[], defaultTabSize: Length, pixelToPoint: number = 72 / 96) {\n    const p = elem.closest(\"p\");\n\n    const ebb = elem.getBoundingClientRect();\n    const pbb = p.getBoundingClientRect();\n    const pcs = getComputedStyle(p);\n\n\tconst tabStops = tabs?.length > 0 ? tabs.map(t => ({\n\t\tpos: lengthToPoint(t.position),\n\t\tleader: t.leader,\n\t\tstyle: t.style\n\t})).sort((a, b) => a.pos - b.pos) : [defaultTab];\n\n\tconst lastTab = tabStops[tabStops.length - 1];\n\tconst pWidthPt = pbb.width * pixelToPoint;\n\tconst size = lengthToPoint(defaultTabSize);\n    let pos = lastTab.pos + size;\n\n    if (pos < pWidthPt) {\n        for (; pos < pWidthPt && tabStops.length < maxTabs; pos += size) {\n            tabStops.push({ ...defaultTab, pos: pos });\n        }\n    }\n\n    const marginLeft = parseFloat(pcs.marginLeft);\n    const pOffset = pbb.left + marginLeft;\n    const left = (ebb.left - pOffset) * pixelToPoint;\n    const tab = tabStops.find(t => t.style != \"clear\" && t.pos > left);\n\n    if(tab == null)\n        return;\n\n    let width: number = 1;\n\n    if (tab.style == \"right\" || tab.style == \"center\") {\n\t\tconst tabStops = Array.from(p.querySelectorAll(`.${elem.className}`));\n\t\tconst nextIdx = tabStops.indexOf(elem) + 1;\n        const range = document.createRange();\n        range.setStart(elem, 1);\n\n\t\tif (nextIdx < tabStops.length) {\n\t\t\trange.setEndBefore(tabStops[nextIdx]);\n\t\t} else {\n\t\t\trange.setEndAfter(p);\n\t\t}\n\n\t\tconst mul = tab.style == \"center\" ? 0.5 : 1;\n        const nextBB = range.getBoundingClientRect();\n\t\tconst offset = nextBB.left + mul * nextBB.width - (pbb.left - marginLeft);\n\n\t\twidth = tab.pos - offset * pixelToPoint;\n    } else {\n        width = tab.pos - left;\n    }\n\n    elem.innerHTML = \"&nbsp;\";\n    elem.style.textDecoration = \"inherit\";\n    elem.style.wordSpacing = `${width.toFixed(0)}pt`;\n\n    switch (tab.leader) {\n        case \"dot\":\n        case \"middleDot\":\n            elem.style.textDecoration = \"underline\";\n            elem.style.textDecorationStyle = \"dotted\";\n            break;\n\n        case \"hyphen\":\n        case \"heavy\":\n        case \"underscore\":\n            elem.style.textDecoration = \"underline\";\n            break;\n    }\n}\n\nfunction lengthToPoint(length: Length): number {\n\treturn parseFloat(length);\n}","import { DomType, OpenXmlElement } from \"../document/dom\";\n\nexport abstract class WmlBaseNote implements OpenXmlElement {\n    id: string;\n\ttype: DomType;\n\tnoteType: string;\n    children?: OpenXmlElement[] = [];\n    cssStyle?: Record<string, string> = {};\n    className?: string;\n    parent?: OpenXmlElement;\n}\n\nexport class WmlFootnote extends WmlBaseNote {\n\ttype = DomType.Footnote\n}\n\nexport class WmlEndnote extends WmlBaseNote {\n\ttype = DomType.Endnote\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { WmlBaseNote, WmlEndnote, WmlFootnote } from \"./elements\";\n\nexport class BaseNotePart<T extends WmlBaseNote> extends Part {\n    protected _documentParser: DocumentParser;\n\n    notes: T[]\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n}\n\nexport class FootnotesPart extends BaseNotePart<WmlFootnote> {\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path, parser);\n    }\n\n    parseXml(root: Element) {\n        this.notes = this._documentParser.parseNotes(root, \"footnote\", WmlFootnote);\n    }\n}\n\nexport class EndnotesPart extends BaseNotePart<WmlEndnote> {\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path, parser);\n    }\n\n    parseXml(root: Element) {\n        this.notes = this._documentParser.parseNotes(root, \"endnote\", WmlEndnote);\n    }\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { IDomNumbering } from \"../document/dom\";\nimport { AbstractNumbering, Numbering, NumberingBulletPicture, NumberingPartProperties, parseNumberingPart } from \"./numbering\";\n\nexport class NumberingPart extends Part implements NumberingPartProperties {\n    private _documentParser: DocumentParser;\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n\n    numberings: Numbering[];\n    abstractNumberings: AbstractNumbering[];\n    bulletPictures: NumberingBulletPicture[];\n    \n    domNumberings: IDomNumbering[];\n\n    parseXml(root: Element) {\n        Object.assign(this, parseNumberingPart(root, this._package.xmlParser));\n        this.domNumberings = this._documentParser.parseNumberingFile(root);  \n    }\n}","import { NumberingPicBullet } from \"../document/dom\";\nimport { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\nimport { parseRunProperties, RunProperties } from \"../document/run\";\nimport { XmlParser } from \"../parser/xml-parser\";\n\nexport interface NumberingPartProperties {\n    numberings: Numbering[];\n    abstractNumberings: AbstractNumbering[];\n    bulletPictures: NumberingBulletPicture[];\n}\n\nexport interface Numbering {\n    id: string;\n    abstractId: string;\n    overrides: NumberingLevelOverride[];\n}\n\nexport interface NumberingLevelOverride {\n    level: number;\n    start: number;\n    numberingLevel: NumberingLevel;\n}\n\nexport interface AbstractNumbering {\n    id: string;\n    name: string;\n    multiLevelType: \"singleLevel\" | \"multiLevel\" | \"hybridMultilevel\" | string;\n    levels: NumberingLevel[];\n    numberingStyleLink: string;\n    styleLink: string;\n}\n\nexport interface NumberingLevel {\n    level: number;\n    start: string;\n    restart: number;\n    format: 'lowerRoman' | 'lowerLetter' | string;\n    text: string;\n    justification: string;\n    bulletPictureId: string;\n    paragraphStyle: string;\n    paragraphProps: ParagraphProperties;\n    runProps: RunProperties;\n}\n\nexport interface NumberingBulletPicture {\n    id: string;\n    referenceId: string;\n    style: string;\n}\n\nexport function parseNumberingPart(elem: Element, xml: XmlParser): NumberingPartProperties {\n    let result: NumberingPartProperties = {\n        numberings: [],\n        abstractNumberings: [],\n        bulletPictures: []\n    }\n    \n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"num\":\n                result.numberings.push(parseNumbering(e, xml));\n                break;\n            case \"abstractNum\":\n                result.abstractNumberings.push(parseAbstractNumbering(e, xml));\n                break;\n            case \"numPicBullet\":\n                result.bulletPictures.push(parseNumberingBulletPicture(e, xml));\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseNumbering(elem: Element, xml: XmlParser): Numbering {\n    let result = <Numbering>{\n        id: xml.attr(elem, 'numId'),\n        overrides: []\n    };\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"abstractNumId\":\n                result.abstractId = xml.attr(e, \"val\");\n                break;\n            case \"lvlOverride\":\n                result.overrides.push(parseNumberingLevelOverrride(e, xml));\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseAbstractNumbering(elem: Element, xml: XmlParser): AbstractNumbering {\n    let result = <AbstractNumbering>{\n        id: xml.attr(elem, 'abstractNumId'),\n        levels: []\n    };\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"name\":\n                result.name = xml.attr(e, \"val\");\n                break;\n            case \"multiLevelType\":\n                result.multiLevelType = xml.attr(e, \"val\");\n                break;\n            case \"numStyleLink\":\n                result.numberingStyleLink = xml.attr(e, \"val\");\n                break;\n            case \"styleLink\":\n                result.styleLink = xml.attr(e, \"val\");\n                break;\n            case \"lvl\":\n                result.levels.push(parseNumberingLevel(e, xml));\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseNumberingLevel(elem: Element, xml: XmlParser): NumberingLevel {\n    let result = <NumberingLevel>{\n        level: xml.intAttr(elem, 'ilvl')\n    };\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"start\":\n                result.start = xml.attr(e, \"val\");\n                break;\n            case \"lvlRestart\":\n                result.restart = xml.intAttr(e, \"val\");\n                break;\n            case \"numFmt\":\n                result.format = xml.attr(e, \"val\");\n                break;\n            case \"lvlText\":\n                result.text = xml.attr(e, \"val\");\n                break;\n            case \"lvlJc\":\n                result.justification = xml.attr(e, \"val\");\n                break;\n            case \"lvlPicBulletId\":\n                result.bulletPictureId = xml.attr(e, \"val\");\n                break;\n            case \"pStyle\":\n                result.paragraphStyle = xml.attr(e, \"val\");\n                break;\n            case \"pPr\":\n                result.paragraphProps = parseParagraphProperties(e, xml);\n                break;\n            case \"rPr\":\n                result.runProps = parseRunProperties(e, xml);\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseNumberingLevelOverrride(elem: Element, xml: XmlParser): NumberingLevelOverride {\n    let result = <NumberingLevelOverride>{\n        level: xml.intAttr(elem, 'ilvl')\n    };\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"startOverride\":\n                result.start = xml.intAttr(e, \"val\");\n                break;\n            case \"lvl\":\n                result.numberingLevel = parseNumberingLevel(e, xml);\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseNumberingBulletPicture(elem: Element, xml: XmlParser): NumberingBulletPicture {\n    //TODO\n    var pict = xml.element(elem, \"pict\");\n    var shape = pict && xml.element(pict, \"shape\");\n    var imagedata = shape && xml.element(shape, \"imagedata\");\n\n    return imagedata ? {\n        id: xml.attr(elem, \"numPicBulletId\"),\n        referenceId: xml.attr(imagedata, \"id\"),\n        style: xml.attr(shape, \"style\")\n    } : null;\n}","import { Length,  LengthUsage, LengthUsageType, convertLength, convertBoolean  } from \"../document/common\";\n\nexport function parseXmlString(xmlString: string, trimXmlDeclaration: boolean = false): Document {\n    if (trimXmlDeclaration)\n        xmlString = xmlString.replace(/<[?].*[?]>/, \"\");\n    \n    const result = new DOMParser().parseFromString(xmlString, \"application/xml\");  \n    const errorText = hasXmlParserError(result);\n\n    if (errorText)\n        throw new Error(errorText);\n\n    return result;\n}\n\nfunction hasXmlParserError(doc: Document) {\n    return doc.getElementsByTagName(\"parsererror\")[0]?.textContent;\n}\n\nexport function serializeXmlString(elem: Node): string {\n    return new XMLSerializer().serializeToString(elem);\n}\n\nexport class XmlParser {\n    elements(elem: Element, localName: string = null): Element[] {\n        const result = [];\n\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\n            let c = elem.childNodes.item(i);\n\n            if (c.nodeType == 1 && (localName == null || (c as Element).localName == localName))\n                result.push(c);\n        }\n\n        return result;\n    }\n\n    element(elem: Element, localName: string): Element {\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\n            let c = elem.childNodes.item(i);\n\n            if (c.nodeType == 1 && (c as Element).localName == localName)\n                return c as Element;\n        }\n\n        return null;\n    }\n\n    elementAttr(elem: Element, localName: string, attrLocalName: string): string {\n        var el = this.element(elem, localName);\n        return el ? this.attr(el, attrLocalName) : undefined;\n    }\n\n\tattrs(elem: Element) {\n\t\treturn Array.from(elem.attributes);\n\t}\n\n    attr(elem: Element, localName: string): string {\n        for (let i = 0, l = elem.attributes.length; i < l; i++) {\n            let a = elem.attributes.item(i);\n\n            if (a.localName == localName)\n                return a.value;\n        }\n\n        return null;\n    }\n\n    intAttr(node: Element, attrName: string, defaultValue: number = null): number {\n        var val = this.attr(node, attrName);\n        return val ? parseInt(val) : defaultValue;\n    }\n\n\thexAttr(node: Element, attrName: string, defaultValue: number = null): number {\n        var val = this.attr(node, attrName);\n        return val ? parseInt(val, 16) : defaultValue;\n    }\n\n    floatAttr(node: Element, attrName: string, defaultValue: number = null): number {\n        var val = this.attr(node, attrName);\n        return val ? parseFloat(val) : defaultValue;\n    }\n\n    boolAttr(node: Element, attrName: string, defaultValue: boolean = null) {\n        return convertBoolean(this.attr(node, attrName), defaultValue);\n    }\n\n    lengthAttr(node: Element, attrName: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\n        return convertLength(this.attr(node, attrName), usage);\n    }\n}\n\nconst globalXmlParser = new XmlParser();\n\nexport default globalXmlParser;","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { WmlSettings, parseSettings } from \"./settings\";\n\nexport class SettingsPart extends Part {\n\tsettings: WmlSettings;\n\n\tconstructor(pkg: OpenXmlPackage, path: string) {\n\t\tsuper(pkg, path);\n\t}\n\n\tparseXml(root: Element) {\n\t\tthis.settings = parseSettings(root, this._package.xmlParser);\n\t}\n}","import { DocumentParser } from \"../document-parser\";\nimport { Length } from \"../document/common\";\nimport { XmlParser } from \"../parser/xml-parser\";\n\nexport interface WmlSettings {\n\tdefaultTabStop: Length;\n\tfootnoteProps: NoteProperties;\n\tendnoteProps: NoteProperties;\n\tautoHyphenation: boolean;\n}\n\nexport interface NoteProperties {\n\tnummeringFormat: string;\n\tdefaultNoteIds: string[];\n}\n\nexport function parseSettings(elem: Element, xml: XmlParser) {\n\tvar result = {} as WmlSettings; \n\n\tfor (let el of xml.elements(elem)) {\n\t\tswitch(el.localName) {\n\t\t\tcase \"defaultTabStop\": result.defaultTabStop = xml.lengthAttr(el, \"val\"); break;\n\t\t\tcase \"footnotePr\": result.footnoteProps = parseNoteProperties(el, xml); break;\n\t\t\tcase \"endnotePr\": result.endnoteProps = parseNoteProperties(el, xml); break;\n\t\t\tcase \"autoHyphenation\": result.autoHyphenation = xml.boolAttr(el, \"val\"); break;\n\t\t}\n\t}\n\n    return result;\n}\n\nexport function parseNoteProperties(elem: Element, xml: XmlParser) {\n\tvar result = {\n\t\tdefaultNoteIds: []\n\t} as NoteProperties; \n\n\tfor (let el of xml.elements(elem)) {\n\t\tswitch(el.localName) {\n\t\t\tcase \"numFmt\": \n\t\t\t\tresult.nummeringFormat = xml.attr(el, \"val\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"footnote\": \n\t\t\tcase \"endnote\": \n\t\t\t\tresult.defaultNoteIds.push(xml.attr(el, \"id\"));\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n    return result;\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { IDomStyle } from \"../document/style\";\n\nexport class StylesPart extends Part {\n    styles: IDomStyle[];\n\n    private _documentParser: DocumentParser;\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n\n    parseXml(root: Element) {\n        this.styles = this._documentParser.parseStylesFile(root);     \n    }\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DmlTheme, parseTheme } from \"./theme\";\n\nexport class ThemePart extends Part {\n    theme: DmlTheme;\n\n    constructor(pkg: OpenXmlPackage, path: string) {\n        super(pkg, path);\n    }\n\n    parseXml(root: Element) {\n        this.theme = parseTheme(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport class DmlTheme {\n    colorScheme: DmlColorScheme;\n    fontScheme: DmlFontScheme;\n}\n\nexport interface DmlColorScheme {\n    name: string;\n    colors: Record<string, string>;\n}\n\nexport interface DmlFontScheme {\n    name: string;\n    majorFont: DmlFormInfo,\n    minorFont: DmlFormInfo\n}\n\nexport interface DmlFormInfo {\n    latinTypeface: string;\n    eaTypeface: string;\n    csTypeface: string;\n}\n\nexport function parseTheme(elem: Element, xml: XmlParser) {\n    var result = new DmlTheme();\n    var themeElements = xml.element(elem, \"themeElements\");\n\n    for (let el of xml.elements(themeElements)) {\n        switch(el.localName) {\n            case \"clrScheme\": result.colorScheme = parseColorScheme(el, xml); break;\n            case \"fontScheme\": result.fontScheme = parseFontScheme(el, xml); break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseColorScheme(elem: Element, xml: XmlParser) {\n    var result: DmlColorScheme = { \n        name: xml.attr(elem, \"name\"),\n        colors: {}\n    };\n\n    for (let el of xml.elements(elem)) {\n        var srgbClr = xml.element(el, \"srgbClr\");\n        var sysClr = xml.element(el, \"sysClr\");\n\n        if (srgbClr) {\n            result.colors[el.localName] = xml.attr(srgbClr, \"val\");\n        }\n        else if (sysClr) {\n            result.colors[el.localName] = xml.attr(sysClr, \"lastClr\");\n        }\n    }\n\n    return result;\n}\n\nexport function parseFontScheme(elem: Element, xml: XmlParser) {\n    var result: DmlFontScheme = { \n        name: xml.attr(elem, \"name\"),\n    } as DmlFontScheme;\n\n    for (let el of xml.elements(elem)) {\n        switch (el.localName) {\n            case \"majorFont\": result.majorFont = parseFontInfo(el, xml); break;\n            case \"minorFont\": result.minorFont = parseFontInfo(el, xml); break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseFontInfo(elem: Element, xml: XmlParser): DmlFormInfo {\n    return {\n        latinTypeface: xml.elementAttr(elem, \"latin\", \"typeface\"),\n        eaTypeface: xml.elementAttr(elem, \"ea\", \"typeface\"),\n        csTypeface: xml.elementAttr(elem, \"cs\", \"typeface\"),\n    };\n}","export function escapeClassName(className: string) {\n\treturn className?.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and').toLowerCase();\n}\n\nexport function splitPath(path: string): [string, string] {\n    let si = path.lastIndexOf('/') + 1;\n    let folder = si == 0 ? \"\" : path.substring(0, si);\n    let fileName = si == 0 ? path : path.substring(si);\n\n    return [folder, fileName];\n}\n\nexport function resolvePath(path: string, base: string): string {\n    try {\n        const prefix = \"http://docx/\";\n        const url = new URL(path, prefix + base).toString();\n        return url.substring(prefix.length);\n    } catch {\n        return `${base}${path}`;\n    }\n}\n\nexport function keyBy<T = any>(array: T[], by: (x: T) => any): Record<any, T> {\n    return array.reduce((a, x) => {\n        a[by(x)] = x;\n        return a;\n    }, {});\n}\n\nexport function blobToBase64(blob: Blob): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = new FileReader();\n\t\treader.onloadend = () => resolve(reader.result as string);\n\t\treader.onerror = () => reject();\n\t\treader.readAsDataURL(blob);\n\t});\n}\n\nexport function isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nexport function isString(item: unknown): item is string {\n    return item && typeof item === 'string' || item instanceof String;\n}\n\nexport function mergeDeep(target, ...sources) {\n    if (!sources.length) \n        return target;\n    \n    const source = sources.shift();\n\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (isObject(source[key])) {\n                const val = target[key] ?? (target[key] = {});\n                mergeDeep(val, source[key]);\n            } else {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    return mergeDeep(target, ...sources);\n}\n\nexport function parseCssRules(text: string): Record<string, string> {\n\tconst result: Record<string, string> = {};\n\n\tfor (const rule of text.split(';')) {\n\t\tconst [key, val] = rule.split(':');\n\t\tresult[key] = val;\n\t}\n\n\treturn result\n}\n\nexport function formatCssRules(style: Record<string, string>): string {\n\treturn Object.entries(style).map((k, v) => `${k}: ${v}`).join(';');\n}\n\nexport function asArray<T>(val: T | T[]): T[] {\n\treturn Array.isArray(val) ? val : [val];\n}","import { convertLength, LengthUsage } from '../document/common';\nimport { DomType, OpenXmlElement } from '../document/dom';\nimport xml from '../parser/xml-parser';\nimport { formatCssRules, parseCssRules } from '../utils';\n\nexport class VmlElement implements OpenXmlElement {\n\ttype: DomType = DomType.VmlElement;\n\ttagName: string;\n\tcssStyleText?: string;\n\tattrs: Record<string, string> = {};\n\tchidren: VmlElement[] = [];\n\twrapType?: string;\n\timageHref?: {\n\t\tid: string,\n\t\ttitle: string\n\t}\n}\n\nexport function parseVmlElement(elem: Element): VmlElement {\n\tvar result = new VmlElement();\n\n\tswitch (elem.localName) {\n\t\tcase \"rect\":\n\t\t\tresult.tagName = \"rect\"; \n\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\n\t\t\tbreak;\n\n\t\tcase \"oval\":\n\t\t\tresult.tagName = \"ellipse\"; \n\t\t\tObject.assign(result.attrs, { cx: \"50%\", cy: \"50%\", rx: \"50%\", ry: \"50%\" });\n\t\t\tbreak;\n\t\n\t\tcase \"line\":\n\t\t\tresult.tagName = \"line\"; \n\t\t\tbreak;\n\n\t\tcase \"shape\":\n\t\t\tresult.tagName = \"g\"; \n\t\t\tbreak;\n\t\t\n\t\tdefault:\n\t\t\treturn null;\n\t}\n\n\tfor (const at of xml.attrs(elem)) {\n\t\tswitch(at.localName) {\n\t\t\tcase \"style\": \n\t\t\t\tresult.cssStyleText = at.value;\n\t\t\t\tbreak;\n\n\t\t\tcase \"fillcolor\": \n\t\t\t\tresult.attrs.fill = at.value; \n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase \"from\":\n\t\t\t\tconst [x1, y1] = parsePoint(at.value);\n\t\t\t\tObject.assign(result.attrs, { x1, y1 });\n\t\t\t\tbreak;\n\n\t\t\tcase \"to\":\n\t\t\t\tconst [x2, y2] = parsePoint(at.value);\n\t\t\t\tObject.assign(result.attrs, { x2, y2 });\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (const el of xml.elements(elem)) {\n\t\tswitch (el.localName) {\n\t\t\tcase \"stroke\": \n\t\t\t\tObject.assign(result.attrs, parseStroke(el));\n\t\t\t\tbreak;\n\n\t\t\tcase \"fill\": \n\t\t\t\tObject.assign(result.attrs, parseFill(el));\n\t\t\t\tbreak;\n\n\t\t\tcase \"imagedata\":\n\t\t\t\tresult.tagName = \"image\";\n\t\t\t\tObject.assign(result.attrs, { width: '100%', height: '100%' });\n\t\t\t\tresult.imageHref = {\n\t\t\t\t\tid: xml.attr(el, \"id\"),\n\t\t\t\t\ttitle: xml.attr(el, \"title\"),\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconst child = parseVmlElement(el);\n\t\t\t\tchild && result.chidren.push(child);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction parseStroke(el: Element): Record<string, string> {\n\treturn {\n\t\t'stroke': xml.attr(el, \"color\"),\n\t\t'stroke-width': xml.lengthAttr(el, \"weight\", LengthUsage.Emu) ?? '1px'\n\t};\n}\n\nfunction parseFill(el: Element): Record<string, string> {\n\treturn {\n\t\t//'fill': xml.attr(el, \"color2\")\n\t};\n}\n\nfunction parsePoint(val: string): string[] {\n\treturn val.split(\",\");\n}\n\nfunction convertPath(path: string): string {\n\treturn path.replace(/([mlxe])|([-\\d]+)|([,])/g, (m) => {\n\t\tif (/[-\\d]/.test(m)) return convertLength(m,  LengthUsage.VmlEmu);\n\t\tif (/[ml,]/.test(m)) return m;\n\n\t\treturn '';\n\t});\n}","import { OutputType } from \"jszip\";\n\nimport { DocumentParser } from './document-parser';\nimport { Relationship, RelationshipTypes } from './common/relationship';\nimport { Part } from './common/part';\nimport { FontTablePart } from './font-table/font-table';\nimport { OpenXmlPackage } from './common/open-xml-package';\nimport { DocumentPart } from './document/document-part';\nimport { blobToBase64, resolvePath, splitPath } from './utils';\nimport { NumberingPart } from './numbering/numbering-part';\nimport { StylesPart } from './styles/styles-part';\nimport { FooterPart, HeaderPart } from \"./header-footer/parts\";\nimport { ExtendedPropsPart } from \"./document-props/extended-props-part\";\nimport { CorePropsPart } from \"./document-props/core-props-part\";\nimport { ThemePart } from \"./theme/theme-part\";\nimport { EndnotesPart, FootnotesPart } from \"./notes/parts\";\nimport { SettingsPart } from \"./settings/settings-part\";\nimport { CustomPropsPart } from \"./document-props/custom-props-part\";\n\nconst topLevelRels = [\n\t{ type: RelationshipTypes.OfficeDocument, target: \"word/document.xml\" },\n\t{ type: RelationshipTypes.ExtendedProperties, target: \"docProps/app.xml\" },\n\t{ type: RelationshipTypes.CoreProperties, target: \"docProps/core.xml\" },\n\t{ type: RelationshipTypes.CustomProperties, target: \"docProps/custom.xml\" },\n];\n\nexport class WordDocument {\n\tprivate _package: OpenXmlPackage;\n\tprivate _parser: DocumentParser;\n\tprivate _options: any;\n\n\trels: Relationship[];\n\tparts: Part[] = [];\n\tpartsMap: Record<string, Part> = {};\n\n\tdocumentPart: DocumentPart;\n\tfontTablePart: FontTablePart;\n\tnumberingPart: NumberingPart;\n\tstylesPart: StylesPart;\n\tfootnotesPart: FootnotesPart;\n\tendnotesPart: EndnotesPart;\n\tthemePart: ThemePart;\n\tcorePropsPart: CorePropsPart;\n\textendedPropsPart: ExtendedPropsPart;\n\tsettingsPart: SettingsPart;\n\n\tstatic async load(blob: Blob | any, parser: DocumentParser, options: any): Promise<WordDocument> {\n\t\tvar d = new WordDocument();\n\n\t\td._options = options;\n\t\td._parser = parser;\n\t\td._package = await OpenXmlPackage.load(blob, options);\n\t\td.rels = await d._package.loadRelationships();\n\n\t\tawait Promise.all(topLevelRels.map(rel => {\n\t\t\tconst r = d.rels.find(x => x.type === rel.type) ?? rel; //fallback                    \n\t\t\treturn d.loadRelationshipPart(r.target, r.type);\n\t\t}));\n\n\t\treturn d;\n\t}\n\n\tsave(type = \"blob\"): Promise<any> {\n\t\treturn this._package.save(type);\n\t}\n\n\tprivate async loadRelationshipPart(path: string, type: string): Promise<Part> {\n\t\tif (this.partsMap[path])\n\t\t\treturn this.partsMap[path];\n\n\t\tif (!this._package.get(path))\n\t\t\treturn null;\n\n\t\tlet part: Part = null;\n\n\t\tswitch (type) {\n\t\t\tcase RelationshipTypes.OfficeDocument:\n\t\t\t\tthis.documentPart = part = new DocumentPart(this._package, path, this._parser);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.FontTable:\n\t\t\t\tthis.fontTablePart = part = new FontTablePart(this._package, path);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.Numbering:\n\t\t\t\tthis.numberingPart = part = new NumberingPart(this._package, path, this._parser);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.Styles:\n\t\t\t\tthis.stylesPart = part = new StylesPart(this._package, path, this._parser);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.Theme:\n\t\t\t\tthis.themePart = part = new ThemePart(this._package, path);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.Footnotes:\n\t\t\t\tthis.footnotesPart = part = new FootnotesPart(this._package, path, this._parser);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.Endnotes:\n\t\t\t\tthis.endnotesPart = part = new EndnotesPart(this._package, path, this._parser);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.Footer:\n\t\t\t\tpart = new FooterPart(this._package, path, this._parser);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.Header:\n\t\t\t\tpart = new HeaderPart(this._package, path, this._parser);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.CoreProperties:\n\t\t\t\tthis.corePropsPart = part = new CorePropsPart(this._package, path);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.ExtendedProperties:\n\t\t\t\tthis.extendedPropsPart = part = new ExtendedPropsPart(this._package, path);\n\t\t\t\tbreak;\n\n\t\t\tcase RelationshipTypes.CustomProperties:\n\t\t\t\tpart = new CustomPropsPart(this._package, path);\n\t\t\t\tbreak;\n\t\n\t\t\tcase RelationshipTypes.Settings:\n\t\t\t\tthis.settingsPart = part = new SettingsPart(this._package, path);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (part == null)\n\t\t\treturn Promise.resolve(null);\n\n\t\tthis.partsMap[path] = part;\n\t\tthis.parts.push(part);\n\n\t\tawait part.load();\n\n\t\tif (part.rels?.length > 0) {\n\t\t\tconst [folder] = splitPath(part.path);\n\t\t\tawait Promise.all(part.rels.map(rel => this.loadRelationshipPart(resolvePath(rel.target, folder), rel.type)));\n\t\t}\n\n\t\treturn part;\n\t}\n\n\tasync loadDocumentImage(id: string, part?: Part): Promise<string> {\n\t\tconst x = await this.loadResource(part ?? this.documentPart, id, \"blob\");\n\t\treturn this.blobToURL(x);\n\t}\n\n\tasync loadNumberingImage(id: string): Promise<string> {\n\t\tconst x = await this.loadResource(this.numberingPart, id, \"blob\");\n\t\treturn this.blobToURL(x);\n\t}\n\n\tasync loadFont(id: string, key: string): Promise<string> {\n\t\tconst x = await this.loadResource(this.fontTablePart, id, \"uint8array\");\n\t\treturn x ? this.blobToURL(new Blob([deobfuscate(x, key)])) : x;\n\t}\n\n\tprivate blobToURL(blob: Blob): string | Promise<string> {\n\t\tif (!blob)\n\t\t\treturn null;\n\n\t\tif (this._options.useBase64URL) {\n\t\t\treturn blobToBase64(blob);\n\t\t}\n\n\t\treturn URL.createObjectURL(blob);\n\t}\n\n\tfindPartByRelId(id: string, basePart: Part = null) {\n\t\tvar rel = (basePart.rels ?? this.rels).find(r => r.id == id);\n\t\tconst folder = basePart ? splitPath(basePart.path)[0] : '';\n\t\treturn rel ? this.partsMap[resolvePath(rel.target, folder)] : null;\n\t}\n\n\tgetPathById(part: Part, id: string): string {\n\t\tconst rel = part.rels.find(x => x.id == id);\n\t\tconst [folder] = splitPath(part.path);\n\t\treturn rel ? resolvePath(rel.target, folder) : null;\n\t}\n\n\tprivate loadResource(part: Part, id: string, outputType: OutputType) {\n\t\tconst path = this.getPathById(part, id);\n\t\treturn path ? this._package.load(path, outputType) : Promise.resolve(null);\n\t}\n}\n\nexport function deobfuscate(data: Uint8Array, guidKey: string): Uint8Array {\n\tconst len = 16;\n\tconst trimmed = guidKey.replace(/{|}|-/g, \"\");\n\tconst numbers = new Array(len);\n\n\tfor (let i = 0; i < len; i++)\n\t\tnumbers[len - i - 1] = parseInt(trimmed.substr(i * 2, 2), 16);\n\n\tfor (let i = 0; i < 32; i++)\n\t\tdata[i] = data[i] ^ numbers[i % len]\n\n\treturn data;\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__626__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t345: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(667);\n"],"names":["root","factory","exports","module","require","define","amd","globalThis","__WEBPACK_EXTERNAL_MODULE__626__","___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","push","id","toString","cssWithMappingToString","list","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","url","options","String","__esModule","default","test","slice","hash","needQuotes","replace","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","OpenXmlPackage","constructor","_zip","xmlParser","XmlParser","get","path","files","startsWith","substr","normalizePath","update","file","static","input","zip","JSZip","loadAsync","save","type","generateAsync","load","async","Promise","resolve","relsPath","f","fn","splitPath","txt","parseRelationships","parseXmlDocument","firstElementChild","parseXmlString","trimXmlDeclaration","_package","rels","loadRelationships","xmlText","xmlDoc","keepOrigin","_xmlDocument","parseXml","serializeXmlString","RelationshipTypes","xml","elements","e","attr","target","targetMode","autos","shd","color","borderColor","highlight","supportedNamespaceURIs","mmlTagMap","DomType","MmlMath","MmlMathParagraph","MmlFraction","MmlNumerator","MmlDenominator","MmlRadical","MmlDegree","MmlBase","MmlSuperscript","MmlSubscript","MmlSuperArgument","MmlSubArgument","MmlDelimiter","MmlNary","ignoreWidth","debug","parseNotes","elemName","elemClass","result","el","node","noteType","children","parseBodyElements","parseDocumentFile","xbody","element","background","sectPr","Document","props","parseSectionProperties","cssStyle","parseBackground","elem","xmlUtil","colorAttr","localName","parseParagraph","parseTable","parseSdt","parseStylesFile","xstyles","foreach","n","parseStyle","parseDefaultStyles","name","basedOn","styles","c","rPr","values","parseDefaultProperties","pPr","isDefault","boolAttr","linked","next","aliases","split","paragraphProps","parseParagraphProperties","runProps","parseRunProperties","s","parseTableStyle","console","warn","selector","modificator","mod","parseNumberingFile","xnums","mapping","bullets","parseAbstractNumbering","forEach","x","parseNumberingPicBullet","numId","abstractNumId","elementAttr","pict","shape","imagedata","intAttr","src","style","parseNumberingLevel","level","pStyleName","pStyle","rStyle","suff","bullet","find","levelText","format","parser","sdtContent","parseInserted","parentParser","Inserted","parseDeleted","Deleted","Paragraph","parseRun","parseHyperlink","previousElementSibling","getElementsByTagName","parseBookmarkStart","parseBookmarkEnd","parseMathElement","paragraph","parseParagraphProperty","styleName","className","classNameOfCnfStyle","parseFrame","parent","Hyperlink","anchor","relId","href","checkbox","parseCheckbox","Run","checkAlternateContent","Text","text","textContent","DeletedText","SimpleField","instruction","lock","dirty","fieldRun","Instruction","ComplexField","charType","NoBreakHyphen","Break","break","Symbol","font","char","Tab","FootnoteReference","EndnoteReference","d","parseDrawing","parseVmlPicture","propsTag","run","MmlRun","parseMathProperies","hideDegree","beginChar","endChar","verticalAlign","valueOfVertAlign","VmlPicture","child","parseVmlElement","choice","requires","namespaceURI","lookupNamespaceURI","includes","parseDrawingWrapper","Drawing","isAnchor","wrapType","simplePos","posX","relative","align","offset","posY","lengthAttr","LengthUsage","Emu","pos","alignNode","offsetNode","sizeValue","g","parseGraphic","graphicData","parsePicture","Image","blipFill","blip","spPr","xfrm","Table","parseTableRow","columns","parseTableColumns","parseTableProperties","width","table","cellStyle","classNameOftblLook","parseTablePosition","colBandSize","rowBandSize","topFromText","bottomFromText","rightFromText","leftFromText","addSize","Row","parseTableCell","parseTableRowProperties","row","isHeader","Cell","parseTableCellProperties","cell","span","verticalMerge","childStyle","handler","valueOfJc","valueOfTextAlignment","FontSize","valueOfSize","parseTrHeight","parseUnderline","parseIndentation","parseFont","parseBorderProperties","valueOfMargin","valueOfBorder","parseMarginProperties","valueOfTblLayout","parseSpacing","val","col","fonts","themeValue","filter","firstLine","hanging","left","start","right","end","before","after","line","lineRule","toFixed","output","knownColors","cb","childNodes","nodeType","Node","ELEMENT_NODE","attrName","defValue","autoColor","v","themeColor","Dxa","convertLength","Percent","Border","_","asTagName","a","b","hexAttr","trim","CorePropsPart","Part","parseCoreProps","title","description","subject","creator","keywords","language","lastModifiedBy","revision","parseInt","CustomPropsPart","parseCustomProps","firstChild","formatId","nodeName","value","ExtendedPropsPart","parseExtendedProps","safeParseToInt","template","pages","words","characters","application","lines","paragraphs","company","appVersion","BookmarkStart","colFirst","colLast","BookmarkEnd","parseBorder","size","Point","frame","shadow","top","bottom","checkboxDefaultName","getName","checkboxElement","parentElement","statusTextElement","statusTextName","nameElement","getDefaultChecked","defaultElement","CheckboxFormField","checked","ns","wordml","drawingml","picture","compatibility","math","mul","unit","LineHeight","VmlEmu","usage","defaultValue","fontSize","DocumentPart","pkg","super","_documentParser","body","parseCommonProperty","tabs","parseTabs","sectionProps","numbering","parseNumbering","lineSpacing","parseLineSpacing","textAlignment","keepLines","keepNext","pageBreakBefore","outlineLevel","position","leader","parseRunProperty","parseColumns","numberOfColumns","space","separator","equalWidth","parsePageNumber","chapSep","chapStyle","parseFooterHeaderReference","SectionType","section","pageSize","height","orientation","pageMargins","header","footer","gutter","headerRefs","footerRefs","titlePage","pageBorders","parseBorders","pageNumber","defaultOptions","ignoreHeight","ignoreFonts","ignorePageMargins","breakPages","experimental","inWrapper","ignoreLastRenderedPageBreak","renderHeaders","renderFooters","renderFootnotes","renderEndnotes","useBase64URL","useMathMLPolyfill","renderChanges","userOptions","ops","WordDocument","DocumentParser","bodyContainer","styleContainer","renderer","HtmlRenderer","window","document","doc","render","FontTablePart","parseFonts","embedFontTypeMap","embedRegular","embedBold","embedItalic","embedBoldItalic","embedFontRefs","family","altName","parseEmbedFontRef","key","Header","Footer","BaseHeaderFooterPart","rootElement","createRootElement","WmlHeader","WmlFooter","svg","mathML","createElement","tagName","createElementNS","createSvgElement","Object","assign","appendChildren","removeAllElements","innerHTML","appendChild","isString","createTextNode","createStyleElement","cssText","appendComment","comment","createComment","htmlDocument","styleMap","currentPart","tableVerticalMerges","currentVerticalMerge","tableCellPositions","currentCellPosition","footnoteMap","endnoteMap","currentEndnoteIds","usedHederFooterParts","currentTabs","tabsTimeout","rootSelector","renderDefaultStyle","MathMLElement","themePart","renderTheme","stylesPart","processStyles","renderStyles","numberingPart","prodessNumberings","domNumberings","renderNumbering","footnotesPart","keyBy","notes","endnotesPart","settingsPart","defaultTabSize","settings","defaultTabStop","fontTablePart","renderFontTable","sectionElements","renderSections","documentPart","renderWrapper","refreshTabStops","variables","fontScheme","theme","majorFont","latinTypeface","minorFont","colorScheme","entries","colors","styleToString","fontsPart","ref","loadFont","then","fontData","cssValues","processStyleName","escapeClassName","stylesMap","baseStyle","mergeDeep","baseValues","styleValues","copyStyleProperties","cssName","numberings","num","findStyle","processElement","processTable","r","attrs","getOwnPropertyNames","hasOwnProperty","createSection","paddingLeft","paddingRight","paddingTop","paddingBottom","minHeight","columnCount","columnGap","columnRule","sections","splitBySection","prevProps","l","currentFootnoteIds","sectProps","sectionElement","renderStyleValues","renderHeaderFooter","contentElement","renderElements","renderNotes","refs","page","firstOfSection","into","part","findPartByRelId","isPageBreakElement","current","p","pBreakIndex","rBreakIndex","findIndex","bind","breakRun","splitRun","newParagraph","runChildren","newRun","currentSectProps","styleText","rootCounters","numberingClass","listStyleType","valiable","toLowerCase","loadNumberingImage","counter","numberingCounter","levelTextToContent","numFormatToCssValue","defautStyles","subStyles","linkedStyle","subStyle","noteIds","notesMap","renderElement","renderParagraph","renderBookmarkStart","renderRun","renderTable","renderTableRow","renderTableCell","renderHyperlink","renderDrawing","renderImage","renderText","renderDeletedText","renderTab","renderSymbol","renderBreak","renderContainer","Footnote","Endnote","renderFootnoteReference","renderEndnoteReference","renderVmlPicture","VmlElement","renderVmlElement","renderContainerNS","xmlns","renderMmlRadical","renderMmlDelimiter","renderMmlRun","renderMmlNary","renderInserted","renderDeleted","renderCheckbox","renderChildren","elems","flatMap","renderClass","renderCommonProperties","classList","add","renderRunProperties","rel","it","display","textIndent","loadDocumentImage","fontFamily","tabSpan","tabStopClass","stops","findParent","wrapper","renderTableColumns","pop","colElem","rowSpan","colSpan","container","setAttribute","cssStyleText","imageHref","requestAnimationFrame","bb","getBBox","Math","ceil","y","base","degree","grouped","sup","sub","supElem","asArray","subElem","charElem","ouput","lvl","selectors","numformat","substring","clearTimeout","setTimeout","pixelToPoint","computePixelToPoint","tab","updateTabStop","defaultTab","lengthToPoint","parseFloat","temp","offsetWidth","removeChild","closest","ebb","getBoundingClientRect","pbb","pcs","getComputedStyle","tabStops","t","sort","lastTab","pWidthPt","marginLeft","pOffset","Array","from","querySelectorAll","nextIdx","indexOf","range","createRange","setStart","setEndBefore","setEndAfter","nextBB","textDecoration","wordSpacing","textDecorationStyle","WmlBaseNote","BaseNotePart","WmlFootnote","WmlEndnote","NumberingPart","parseNumberingPart","overrides","abstractId","parseNumberingLevelOverrride","levels","multiLevelType","numberingStyleLink","styleLink","restart","justification","bulletPictureId","paragraphStyle","numberingLevel","parseNumberingBulletPicture","referenceId","abstractNumberings","bulletPictures","xmlString","DOMParser","parseFromString","errorText","Error","XMLSerializer","serializeToString","attrLocalName","attributes","floatAttr","convertBoolean","globalXmlParser","SettingsPart","parseSettings","parseNoteProperties","defaultNoteIds","nummeringFormat","footnoteProps","endnoteProps","autoHyphenation","StylesPart","ThemePart","parseTheme","DmlTheme","parseColorScheme","srgbClr","sysClr","parseFontScheme","parseFontInfo","eaTypeface","csTypeface","themeElements","isObject","isArray","si","lastIndexOf","prefix","array","by","reduce","blob","reject","reader","FileReader","onloadend","onerror","readAsDataURL","sources","source","shift","rule","chidren","parseStroke","parsePoint","cx","cy","rx","ry","at","fill","x1","y1","x2","y2","topLevelRels","OfficeDocument","ExtendedProperties","CoreProperties","CustomProperties","parts","partsMap","_options","_parser","all","loadRelationshipPart","FontTable","Numbering","Styles","Theme","Footnotes","FootnotesPart","Endnotes","EndnotesPart","FooterPart","HeaderPart","corePropsPart","extendedPropsPart","Settings","folder","resolvePath","loadResource","blobToURL","Blob","deobfuscate","blobToBase64","createObjectURL","basePart","getPathById","outputType","guidKey","trimmed","numbers","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","getter","definition","o","defineProperty","enumerable","obj","prop","prototype","call","toStringTag","baseURI","self","location"],"sourceRoot":""}